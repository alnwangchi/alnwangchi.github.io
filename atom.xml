<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>AllenW BLOG</title>
  
  
  <link href="https://alnwangchi.github.io/atom.xml" rel="self"/>
  
  <link href="https://alnwangchi.github.io/"/>
  <updated>2021-11-26T15:50:18.851Z</updated>
  <id>https://alnwangchi.github.io/</id>
  
  <author>
    <name>Allen Wang</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Firebase</title>
    <link href="https://alnwangchi.github.io/2021/11/26/Firebase/"/>
    <id>https://alnwangchi.github.io/2021/11/26/Firebase/</id>
    <published>2021-11-26T15:50:00.000Z</published>
    <updated>2021-11-26T15:50:18.851Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Firebase"><a href="#Firebase" class="headerlink" title="Firebase"></a>Firebase</h1><p><a href="https://console.firebase.google.com/u/0/">官網</a><br><a href="https://github.com/firebase/quickstart-js">GitHub</a></p><h3 id="服務內容"><a href="#服務內容" class="headerlink" title="服務內容"></a>服務內容</h3><ol><li>Authentication: 用戶認證管理</li><li>Firestore Database: NoSql資料庫服務</li><li>Realtime Database: 實時儲存並同步資料庫</li><li>Storage: 文件儲存服務(文件、圖片等)</li><li>Hosting: 網站託管</li><li>Function: 服務區程式碼託管</li></ol><h3 id="看看先"><a href="#看看先" class="headerlink" title="看看先"></a>看看先</h3><p>基本上免費版的運用空間已經很多了，需要再開收費方案，好難懂。<br>我這邊先開啟使用的服務是 firestore database</p><h3 id="目前的操作步驟"><a href="#目前的操作步驟" class="headerlink" title="目前的操作步驟"></a>目前的操作步驟</h3><h3 id="發現新大陸"><a href="#發現新大陸" class="headerlink" title="發現新大陸"></a>發現新大陸</h3><ol><li>get() 回來的資料事個物件，沒有順序可言，所以當我轉成陣列時每次順序都不對….</li></ol><p><img src="https://i.imgur.com/iKnN4pn.png"></p><p><img src="https://i.imgur.com/7I1oPCH.png"></p><ul><li>目前大概只能再自己進行資料排序了</li></ul><ol start="2"><li>firestore 的資料結構會是<br><code>collection</code>/<code>document</code>/<code>collection</code>/<code>document</code>／…… 這個樣子來往下延伸</li></ol><h3 id="關於實作時的問題"><a href="#關於實作時的問題" class="headerlink" title="關於實作時的問題"></a>關於實作時的問題</h3><p>上述有提到取回來的資料是一個物件，並且是無序的，那我須要如何處理成可以 render 出正確畫面的資料 ?</p><p>以下為詳細的紀錄以供自己以後看不懂也想不起，但也可能有更好的處理方式吧</p><blockquote><p> 關於讀取資料</p></blockquote><ul><li>doc 代表單一 document</li><li>docs 代表一個 document 的陣列集合</li><li>doc.data() 代表 doc 的物件內容，要這樣才可以拿到內容</li><li>doc.id 代表該 doc 的名稱</li></ul><ol><li>因為要製作每日的出貨庫存記錄表，所以 today 是用來判斷要取得哪個日期的 doc，因為在寫入時也有一樣的變數來記錄日期，所以在每一天寫入跟讀取時都只會共用同一個 doc ，而隔天自動會換另一個 doc</li><li>cateRef 代表路徑，後續按照結構規則來設定要取得的資料</li><li>get() 類似發個 request 吧 ? 不太確定，返回一個 Promise 物件後 .then() 執行後續動作</li><li>取得一個 querySnapshot ， querySnapshot.docs 代表裡面有的 doc ，會是一個陣列</li><li>以我的例子來說，會先取得一個有所有物件的陣列<br><img src="https://i.imgur.com/e1CQzbC.png"></li><li>不能只接跑迴圈來 render 畫面，因為每次資料都是打亂的，所以必須要進行處裡</li><li>dataAry 將每筆物件資料先轉成陣列，這邊會產出一個二維陣列<br><img src="https://i.imgur.com/VyQy13x.png"></li><li>dataSort 取陣列中的第一筆資料 (透過 input id 產生的)，比對末兩位數字來重新排序，形成所思的資料形式</li><li>用個空字串去接要渲染的 HTML 內容然後添加到目標上</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 以上還有固定的資料庫初始化設定</span></span><br><span class="line"><span class="keyword">let</span> db = firebase.firestore();</span><br><span class="line"><span class="keyword">const</span> getData = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> today = moment().format(<span class="string">&quot;YYYY-MM-DD&quot;</span>)</span><br><span class="line">    <span class="keyword">let</span> cateRef = db.collection(<span class="string">&quot;table&quot;</span>).doc(today).collection(<span class="string">&#x27;出貨&#x27;</span>) <span class="comment">// 目標路徑</span></span><br><span class="line">    cateRef</span><br><span class="line">        .get() <span class="comment">// 取資料</span></span><br><span class="line">        .then(<span class="function">(<span class="params">querySnapshot</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> data = querySnapshot.docs; <span class="comment">// 內容陣列</span></span><br><span class="line">            <span class="keyword">let</span> renderHTML = <span class="string">&#x27;&#x27;</span> <span class="comment">// 接內容用</span></span><br><span class="line"></span><br><span class="line">            data.forEach(<span class="function">(<span class="params">doc, index</span>) =&gt;</span> &#123;</span><br><span class="line">                <span class="keyword">let</span> dataAry = <span class="built_in">Object</span>.entries(doc.data()) <span class="comment">// 物件轉為陣列</span></span><br><span class="line">                <span class="keyword">let</span> dataSort = dataAry.sort(<span class="function">(<span class="params">a,b</span>) =&gt;</span> &#123; <span class="comment">// 陣列重新排序</span></span><br><span class="line">                    <span class="keyword">return</span> a[<span class="number">0</span>].slice(-<span class="number">2</span>) &gt; b[<span class="number">0</span>].slice(-<span class="number">2</span>) ? <span class="number">1</span> : -<span class="number">1</span> <span class="comment">// 比對 key 的末兩位數字</span></span><br><span class="line">                 &#125;)</span><br><span class="line">                renderHTML += <span class="string">`&lt;tr&gt;`</span></span><br><span class="line">                renderHTML += <span class="string">`&lt;td&gt;<span class="subst">$&#123;doc.id&#125;</span>&lt;/td&gt;`</span>;</span><br><span class="line">                dataSort.forEach(<span class="function">(<span class="params">ary</span>) =&gt;</span> &#123;</span><br><span class="line">                    renderHTML += <span class="string">`&lt;td&gt;<span class="subst">$&#123;ary[<span class="number">1</span>]&#125;</span>&lt;/td&gt;`</span></span><br><span class="line">                &#125;)</span><br><span class="line">                renderHTML += <span class="string">`&lt;/tr&gt;`</span></span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="keyword">const</span> tbody = getElement(<span class="string">&quot;tbody&quot;</span>); <span class="comment">// DOM</span></span><br><span class="line">            tbody.innerHTML = renderHTML <span class="comment">// render</span></span><br><span class="line">        &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Allen&#39;s note</summary>
    
    
    
    
    <category term="database" scheme="https://alnwangchi.github.io/tags/database/"/>
    
  </entry>
  
  <entry>
    <title>Locomotive Scroll</title>
    <link href="https://alnwangchi.github.io/2021/11/26/Locomotive-Scroll/"/>
    <id>https://alnwangchi.github.io/2021/11/26/Locomotive-Scroll/</id>
    <published>2021-11-26T15:46:09.000Z</published>
    <updated>2021-11-26T15:46:21.781Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Locomotive-Scroll"><a href="#Locomotive-Scroll" class="headerlink" title="Locomotive Scroll"></a>Locomotive Scroll</h1><h6 id="tags-‘lib’"><a href="#tags-‘lib’" class="headerlink" title="tags: ‘lib’"></a>tags: ‘lib’</h6><p>我的網頁要滾動起來有種很微妙的感覺，整個柔順感 upup，然後裡面的內容還會給我微微抖動，還會有一些很酷的動態效果，那個叫什麼來著 ? 就是那個啊 ! 哪個 ?</p><p>Parallax !!! 它的原理是把整個作用區域做一個變形的延遲</p><p>超屌動態<strong>滾動視差</strong>全靠它，附上連結 <a href="https://locomotivemtl.github.io/locomotive-scroll/">Locomotive</a>，頁面中的動態效果都可以做得出來，值得收藏 !</p><p><img src="https://i.imgur.com/s9QeORF.png"></p><hr><p>基本上官方文件應該是說明的蠻清楚的了也有 Demo ，但是英文不好的我看很慢，所以還是自己記錄點東西下來以供日後使用喚醒記憶，</p><h3 id="如何快速的使用"><a href="#如何快速的使用" class="headerlink" title="如何快速的使用"></a>如何快速的使用</h3><p>因為目前專案不大加上自己也不太懂 npm 所以直接抓 css 以及 js 兩隻檔案下來，載入後直接開始使用</p><ol><li>載入<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;link rel=&quot;stylesheet&quot; href=&quot;content/css/locomotive-scroll.css&quot;&gt;</span><br><span class="line">&lt;script src=&quot;content/js/locomotive-scroll.min.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li>JS 如此這般再透過 html 設定 attribute 就可以達到許多效果了<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> scroller = <span class="keyword">new</span> LocomotiveScroll(&#123;</span><br><span class="line">    <span class="attr">el</span>: <span class="built_in">document</span>.querySelector(<span class="string">&#x27;[data-scroll-container]&#x27;</span>), <span class="comment">// 滾動效果的作用範圍</span></span><br><span class="line">    <span class="attr">smooth</span>: <span class="literal">true</span>, <span class="comment">// 開啟</span></span><br><span class="line">    <span class="attr">multiplier</span>: <span class="number">1.2</span>, <span class="comment">// 控制滾動的速度 default = 1</span></span><br><span class="line">    <span class="attr">lerp</span>: <span class="number">0.05</span>, <span class="comment">// scrollbar 停止前趨緩效果 越低越平滑 default = 0.1</span></span><br><span class="line">    <span class="comment">// 以下兩個要是 true 手機版才會有作用</span></span><br><span class="line">    <span class="attr">smartphone</span>: &#123;</span><br><span class="line">        <span class="attr">smooth</span>: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">tablet</span>: &#123;</span><br><span class="line">        <span class="attr">smooth</span>: <span class="literal">true</span></span><br><span class="line">    &#125;  </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li></ol><h3 id="各式參數的設定"><a href="#各式參數的設定" class="headerlink" title="各式參數的設定"></a>各式參數的設定</h3><p>參數中的 el 代表這個作用區，<br>代表要作用的範圍，他預設是寫成 el: document.querySelector(‘[data-scroll-container]’)，所以我整個頁面都要有效果就是直接 data-scroll-container 下在 body tag 上</p><ul><li>data-scroll 定義要背偵測到的 tag ，基本上要有效果都要下</li><li>data-scroll-speed 影響視差偏移的位置，數字越大位移越大，主要效果藉由每個 tag 不同的 speed 不同來造成視差</li><li>data-scroll-direction=”horizontal” 預設垂直位移，這是調整為水平視差</li><li>data-scroll-repeat=”true” 讓每次物件進入視窗時都有效果，不然就是只有一次效果</li><li>data-scroll-section 為 data-scroll-container 底下各個區塊做拆分方便管理，例如某區是做水平視差，某區是做部分 fixed ，某區做透明度進場等等</li><li>data-scroll-sticky 要滾動到某位置時固定住的物件</li><li>data-scroll-target 固定的基準點 (下面另說明)</li><li>data-scroll-class 搭配一般的 class 實現 transition 的效果，實際操作就是定義起始樣式的 class 跟結束時樣式的 class，分別給後者跟前著即可</li><li>data-scroll-offset 偏移的設定第一個參數是 bottom 第二個是 top ，可寫 % 沒寫就是 px</li></ul><h3 id="簡易基本操作"><a href="#簡易基本操作" class="headerlink" title="簡易基本操作"></a>簡易基本操作</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;body data-scroll-container&gt;</span><br><span class="line">    &lt;div data-scroll-section class=&quot;area03&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;h1_box&quot;&gt;</span><br><span class="line">            &lt;h1 data-scroll data-scroll-direction=&quot;horizontal&quot; data-scroll data-scroll-speed=&#x27;15&#x27;&gt;This is Parallax effect&lt;/h1&gt;</span><br><span class="line">            &lt;h1 data-scroll data-scroll-direction=&quot;horizontal&quot; data-scroll data-scroll-speed=&#x27;-15&#x27;&gt;horizontal animation&lt;/h1&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/Uz3nphI.gif"></p><h3 id="問題來了"><a href="#問題來了" class="headerlink" title="問題來了"></a>問題來了</h3><h4 id="1-我要製作類似-popup-的效果，原本-popup-出來的內容是全屏-fixed-的，但是因為套件的關係，他的-fixed-位置會變成在頂部，而不是我想要的效果該如何處理"><a href="#1-我要製作類似-popup-的效果，原本-popup-出來的內容是全屏-fixed-的，但是因為套件的關係，他的-fixed-位置會變成在頂部，而不是我想要的效果該如何處理" class="headerlink" title="1.我要製作類似 popup 的效果，原本 popup 出來的內容是全屏 fixed 的，但是因為套件的關係，他的 fixed 位置會變成在頂部，而不是我想要的效果該如何處理 ?"></a>1.我要製作類似 popup 的效果，原本 popup 出來的內容是全屏 fixed 的，但是因為套件的關係，他的 fixed 位置會變成在頂部，而不是我想要的效果該如何處理 ?</h4><p>把要 fixed 的物件設在 data-scroll-container 之外，我目前的理解是這些在外的東西將不會被套件給偵測，所以他在 fixed 的時候就像一般情況下的定在最上層並不受套件給影響</p><h4 id="2-發現視窗一開始會沒辦法滾動到最下方，我要-resize-整個視窗後才有辦法繼續往下滾，哪邊出問題"><a href="#2-發現視窗一開始會沒辦法滾動到最下方，我要-resize-整個視窗後才有辦法繼續往下滾，哪邊出問題" class="headerlink" title="2.發現視窗一開始會沒辦法滾動到最下方，我要 resize 整個視窗後才有辦法繼續往下滾，哪邊出問題 ?"></a>2.發現視窗一開始會沒辦法滾動到最下方，我要 resize 整個視窗後才有辦法繼續往下滾，哪邊出問題 ?</h4><p><a href="https://github.com/locomotivemtl/locomotive-scroll/issues/241">github issue</a></p><p>必須要讓東西 loading 完成才可以執行 locomotive 物件，不然會造成初始高度計算錯誤而產生最下方的物件無法顯示，需要 resize 整個視窗才可以繼續往下滾動，基本上以此為起手式應該就會比較沒問題</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.addEventListener(<span class="string">&quot;load&quot;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> scroller = <span class="keyword">new</span> LocomotiveScroll(&#123;</span><br><span class="line">    <span class="attr">el</span>: <span class="built_in">document</span>.querySelector(<span class="string">&#x27;[data-scroll-container]&#x27;</span>), <span class="comment">// 滾動效果的作用範圍</span></span><br><span class="line">    <span class="attr">smooth</span>: <span class="literal">true</span>, <span class="comment">// 開啟</span></span><br><span class="line">    <span class="attr">multiplier</span>: <span class="number">0.6</span>, <span class="comment">// 控制滾動的速度 default = 1</span></span><br><span class="line">    <span class="attr">lerp</span>: <span class="number">0.1</span>, <span class="comment">// scrollbar 停止前趨緩效果 越低越平滑 default = 0.1</span></span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="3-想製作點擊按鈕後滾動到某個指定位置功能，但是一般做法整組壞光光"><a href="#3-想製作點擊按鈕後滾動到某個指定位置功能，但是一般做法整組壞光光" class="headerlink" title="3.想製作點擊按鈕後滾動到某個指定位置功能，但是一般做法整組壞光光 ?"></a>3.想製作點擊按鈕後滾動到某個指定位置功能，但是一般做法整組壞光光 ?</h4><p>一般做法，抓出要滾到顯示物件離頂部的距離，觸發後滾到這個指定的距離，但在使用此套件後直接爆開</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">DOM.addEventListener(<span class="string">&#x27;click&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">// jq</span></span><br><span class="line">    $(<span class="string">&#x27;html&#x27;</span>).animate(</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">scrollTop</span>: DOM.offset().top</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="number">1000</span></span><br><span class="line">    )</span><br><span class="line">    <span class="comment">// js</span></span><br><span class="line">    <span class="built_in">window</span>.scrollTo(&#123;</span><br><span class="line">        <span class="attr">top</span>: <span class="number">500</span>,</span><br><span class="line">        <span class="attr">behavior</span>: <span class="string">&quot;smooth&quot;</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>改以此寫法達成，找了半天才發現的解法zz</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> targetDOM = [selector].offset().top</span><br><span class="line">DOM.addEventListener(<span class="string">&#x27;click&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 就這麼簡單 </span></span><br><span class="line">    scroller.scrollTo(targetDOM);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Allen&#39;s lib</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>GSAP</title>
    <link href="https://alnwangchi.github.io/2021/11/26/GSAP/"/>
    <id>https://alnwangchi.github.io/2021/11/26/GSAP/</id>
    <published>2021-11-26T15:45:00.000Z</published>
    <updated>2021-11-26T15:45:13.285Z</updated>
    
    <content type="html"><![CDATA[<h1 id="GSAP-js"><a href="#GSAP-js" class="headerlink" title="GSAP.js"></a>GSAP.js</h1><h3 id="一定是大拇指的-animation-library"><a href="#一定是大拇指的-animation-library" class="headerlink" title="一定是大拇指的 animation library"></a>一定是大拇指的 animation library</h3><p>對各 DOM 物件做出連續動畫，可以從設定點到預設點，也可以從預設點到設定點，點單說就是使用 from()、to() 兩個方法達成</p><p>CDN 直接開用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=&#x27;https://cdnjs.cloudflare.com/ajax/libs/gsap/3.7.1/gsap.min.js&#x27; integrity=&#x27;sha512-UxP+UhJaGRWuMG2YC6LPWYpFQnsSgnor0VUF3BHdD83PS/pOpN+FYbZmrYN+ISX8jnvgVUciqP/fILOXDjZSwg==&#x27; crossorigin=&#x27;anonymous&#x27;&gt;&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/gsap/1.20.2/TweenMax.min.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="timeline"><a href="#timeline" class="headerlink" title="timeline"></a>timeline</h3><p>顧名思義就是建立一條時間線，然後讓後續執行的動作”依序”執行</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> tl = gsap.timeline()</span><br><span class="line"></span><br><span class="line">tl</span><br><span class="line">.from(<span class="string">&#x27;.dropdown&#x27;</span>, &#123;yPercent: -<span class="number">100</span>, duration: <span class="number">.6</span>&#125;)</span><br><span class="line">.from(<span class="string">&#x27;.dropdown li&#x27;</span>, &#123;y: -<span class="number">15</span>, duration: <span class="number">.4</span>, opacity: <span class="number">0</span>, stagger: <span class="number">.1</span>&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 一些寫法 */</span></span><br><span class="line"><span class="comment">// 當要用百分比時</span></span><br><span class="line">tl.from(<span class="string">&#x27;selector&#x27;</span>,&#123;xPercent: <span class="number">100</span>, yPercent: <span class="number">50</span>&#125;) </span><br><span class="line"><span class="comment">// 要用大駝峰寫有 - 連接的屬性</span></span><br><span class="line">tl.from(<span class="string">&#x27;selector&#x27;</span>,&#123;transformOrigin: <span class="string">&#x27;center&#x27;</span>&#125;) </span><br><span class="line"><span class="comment">// 動畫完成 callback</span></span><br><span class="line"><span class="keyword">const</span> t2 = gsap.timeline(&#123;onComplete: callBackFunc&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">/* timeline 的 method */</span></span><br><span class="line"><span class="comment">// 停止</span></span><br><span class="line">tl.pause()</span><br><span class="line"><span class="comment">// 播放</span></span><br><span class="line">tl.play()</span><br><span class="line"><span class="comment">// 反著播（有開啟收合時很方便 例如 dropdownMenu ) 並且 2 秒播完</span></span><br><span class="line">tl.reverse(<span class="number">2</span>) </span><br><span class="line"><span class="comment">// 變成 2 倍速 (也可以小數點)</span></span><br><span class="line">tl.timeScale(<span class="number">2</span>)</span><br><span class="line"><span class="comment">// 某時機可以呼叫 function 參數傳入的方式注意一下</span></span><br><span class="line">tl.call(otherFunction,[<span class="string">&quot;param1&quot;</span>,<span class="string">&quot;param2&quot;</span>])</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Allen&#39;s lib</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Swiper</title>
    <link href="https://alnwangchi.github.io/2021/11/26/Swiper/"/>
    <id>https://alnwangchi.github.io/2021/11/26/Swiper/</id>
    <published>2021-11-26T15:43:39.000Z</published>
    <updated>2021-11-26T15:44:05.580Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Swiper"><a href="#Swiper" class="headerlink" title="Swiper"></a>Swiper</h1><p><a href="https://www.swiper.com.cn/">中文官網</a></p><h4 id="CDN"><a href="#CDN" class="headerlink" title="CDN"></a>CDN</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;link rel=&quot;stylesheet&quot; href=&quot;https://unpkg.com/swiper/swiper-bundle.min.css&quot;&gt;    </span><br><span class="line">&lt;script src=&quot;https://unpkg.com/swiper/swiper-bundle.min.js&quot;&gt; &lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="基礎結構"><a href="#基礎結構" class="headerlink" title="基礎結構"></a>基礎結構</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 單純做自動輪播 --&gt;</span><br><span class="line">&lt;div class=&quot;swiper-container&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;swiper-wrapper&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;swiper-slide&quot;&gt;Slide 1&lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;swiper-slide&quot;&gt;Slide 2&lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;swiper-slide&quot;&gt;Slide 3&lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;!-- 其他需求 --&gt;</span><br><span class="line">&lt;div class=&quot;swiper-container&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;swiper-wrapper&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;swiper-slide&quot;&gt;Slide 1&lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;swiper-slide&quot;&gt;Slide 2&lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;swiper-slide&quot;&gt;Slide 3&lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;!-- 如果需要分頁點點 --&gt;</span><br><span class="line">    &lt;div class=&quot;swiper-pagination&quot;&gt;&lt;/div&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;!-- 如果需要按钮 --&gt;</span><br><span class="line">    &lt;div class=&quot;swiper-button-prev&quot;&gt;&lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;swiper-button-next&quot;&gt;&lt;/div&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;!-- 如果需要滾動條 --&gt;</span><br><span class="line">    &lt;div class=&quot;swiper-scrollbar&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;        </span><br><span class="line">  <span class="keyword">let</span> mySwiper = <span class="keyword">new</span> Swiper (<span class="string">&#x27;.swiper-container&#x27;</span>, options);     </span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="參數設定紀錄"><a href="#參數設定紀錄" class="headerlink" title="參數設定紀錄"></a>參數設定紀錄</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> carousel = <span class="keyword">new</span> Swiper(<span class="string">&#x27;.carousel-container&#x27;</span>, &#123;</span><br><span class="line">    <span class="attr">autoHeight</span>: <span class="literal">true</span>, <span class="comment">//enable auto height</span></span><br><span class="line">    <span class="attr">slidesPerView</span>: <span class="string">&#x27;auto&#x27;</span>, <span class="comment">// 自動根據容器寬度展示內容</span></span><br><span class="line">    <span class="attr">autoplay</span>: <span class="literal">false</span>, <span class="comment">// 自動換頁</span></span><br><span class="line">    <span class="attr">speed</span>: <span class="number">1800</span>, <span class="comment">// 換頁速度</span></span><br><span class="line">    <span class="attr">delay</span>: <span class="number">3000</span>, <span class="comment">// 每頁停留時間 預設 3000</span></span><br><span class="line">    <span class="attr">loop</span>: <span class="literal">true</span>, <span class="comment">// 無限輪播</span></span><br><span class="line">    <span class="attr">effect</span>: <span class="string">&#x27;fade&#x27;</span>, <span class="comment">// 換頁動態效果 預設 slide (除這兩種也沒啥其他好選擇了)</span></span><br><span class="line">    <span class="attr">stopOnLastSlide</span>: <span class="literal">true</span>, <span class="comment">// 最後一頁時停止播放 預設 false (會反向轉回第一頁)</span></span><br><span class="line">    <span class="attr">allowTouchMove</span>: <span class="literal">false</span>, <span class="comment">// 禁止被拖曳</span></span><br><span class="line">    <span class="attr">mousewheel</span>: <span class="literal">true</span>, <span class="comment">// 接受滾輪滾動觸發換頁 預設 false (可設定方向)</span></span><br><span class="line">    <span class="attr">grabCursor</span>: <span class="literal">true</span>, <span class="comment">// 開啟時用戶鼠標 hover 時會變成手形 </span></span><br><span class="line">    <span class="attr">parallax</span>: <span class="literal">true</span>, <span class="comment">// 允許滾動視差 (需搭配 html data 參數)</span></span><br><span class="line">    <span class="attr">spaceBetween</span>: <span class="number">15</span>, <span class="comment">// 每一塊的間距</span></span><br><span class="line">    <span class="attr">direction</span>: <span class="string">&#x27;vertical&#x27;</span>, <span class="comment">// 切换成垂直</span></span><br><span class="line">    <span class="attr">pagination</span>: &#123; <span class="comment">// 分頁點點</span></span><br><span class="line">        <span class="attr">el</span>: <span class="string">&#x27;.swiper-pagination&#x27;</span>,</span><br><span class="line">        <span class="attr">clickable</span>: <span class="literal">true</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">navigation</span>: &#123; <span class="comment">// 若需要按鈕</span></span><br><span class="line">      <span class="attr">nextEl</span>: <span class="string">&#x27;.swiper-button-next&#x27;</span>,</span><br><span class="line">      <span class="attr">prevEl</span>: <span class="string">&#x27;.swiper-button-prev&#x27;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">scrollbar</span>: &#123; <span class="comment">// 若需要滾動條</span></span><br><span class="line">      <span class="attr">el</span>: <span class="string">&#x27;.swiper-scrollbar&#x27;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">breakpoints</span>: &#123; <span class="comment">// 斷點顯示設定</span></span><br><span class="line">      <span class="number">320</span>: &#123;  <span class="comment">// 當裝置寬大於 320 </span></span><br><span class="line">        <span class="attr">slidesPerView</span>: <span class="number">2</span>, <span class="comment">// 要看見幾頁內容 (可用小數點讓使用者知道可滑動)</span></span><br><span class="line">        <span class="attr">spaceBetween</span>: <span class="number">10</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="number">768</span>: &#123;  <span class="comment">// 當裝置寬大於 768</span></span><br><span class="line">        <span class="attr">slidesPerView</span>: <span class="number">3</span>,</span><br><span class="line">        <span class="attr">spaceBetween</span>: <span class="number">20</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="number">1200</span>: &#123;  <span class="comment">// 當裝置寬大於 1200 </span></span><br><span class="line">        <span class="attr">slidesPerView</span>: <span class="number">4</span>,</span><br><span class="line">        <span class="attr">spaceBetween</span>: <span class="number">30</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">on</span>:&#123;</span><br><span class="line">      <span class="attr">click</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">          <span class="comment">// do something</span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// 有許多事件類型可觸發</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="方便複製版"><a href="#方便複製版" class="headerlink" title="方便複製版"></a>方便複製版</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> carousel = <span class="keyword">new</span> Swiper(<span class="string">&#x27;.swiper-container&#x27;</span>, &#123;</span><br><span class="line">    <span class="attr">autoHeight</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">slidesPerView</span>: <span class="string">&#x27;auto&#x27;</span>,</span><br><span class="line">    <span class="attr">navigation</span>: &#123; </span><br><span class="line">      <span class="attr">nextEl</span>: <span class="string">&#x27;.swiper-button-next&#x27;</span>,</span><br><span class="line">      <span class="attr">prevEl</span>: <span class="string">&#x27;.swiper-button-prev&#x27;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">breakpoints</span>: &#123; </span><br><span class="line">      <span class="number">320</span>: &#123;  </span><br><span class="line">        <span class="attr">slidesPerView</span>: <span class="number">2</span>,</span><br><span class="line">        <span class="attr">spaceBetween</span>: <span class="number">10</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="number">768</span>: &#123;  </span><br><span class="line">        <span class="attr">slidesPerView</span>: <span class="number">3</span>,</span><br><span class="line">        <span class="attr">spaceBetween</span>: <span class="number">20</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="number">1200</span>: &#123;  </span><br><span class="line">        <span class="attr">slidesPerView</span>: <span class="number">4</span>,</span><br><span class="line">        <span class="attr">spaceBetween</span>: <span class="number">30</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">autoplay</span>: <span class="literal">false</span>, </span><br><span class="line">    <span class="attr">speed</span>: <span class="number">1800</span>, </span><br><span class="line">    <span class="attr">delay</span>: <span class="number">3000</span>, </span><br><span class="line">    <span class="attr">loop</span>: <span class="literal">true</span>, </span><br><span class="line">    <span class="attr">stopOnLastSlide</span>: <span class="literal">true</span>, </span><br><span class="line">    <span class="attr">allowTouchMove</span>: <span class="literal">false</span>, </span><br><span class="line">    <span class="attr">mousewheel</span>: <span class="literal">true</span>, </span><br><span class="line">    <span class="attr">grabCursor</span>: <span class="literal">true</span>, </span><br><span class="line">    <span class="attr">parallax</span>: <span class="literal">true</span>, </span><br><span class="line">    <span class="attr">spaceBetween</span>: <span class="number">15</span>,</span><br><span class="line">    <span class="attr">direction</span>: <span class="string">&#x27;vertical&#x27;</span>, </span><br><span class="line">        <span class="attr">effect</span>: <span class="string">&#x27;fade&#x27;</span>, </span><br><span class="line">    <span class="attr">pagination</span>: &#123; </span><br><span class="line">        <span class="attr">el</span>: <span class="string">&#x27;.swiper-pagination&#x27;</span>,</span><br><span class="line">        <span class="attr">clickable</span>: <span class="literal">true</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">scrollbar</span>: &#123; </span><br><span class="line">      <span class="attr">el</span>: <span class="string">&#x27;.swiper-scrollbar&#x27;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">on</span>:&#123;</span><br><span class="line">      <span class="attr">click</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">          <span class="comment">// do something</span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// 有許多事件類型可觸發</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="操作-API-紀錄"><a href="#操作-API-紀錄" class="headerlink" title="操作 API 紀錄"></a>操作 API 紀錄</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">carousel.slideNext(speed,cb); <span class="comment">// 往下一頁滑動 (可不傳任何參數)</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Allen&#39;s lib</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Infinite Scroll</title>
    <link href="https://alnwangchi.github.io/2021/11/26/Infinite-Scroll/"/>
    <id>https://alnwangchi.github.io/2021/11/26/Infinite-Scroll/</id>
    <published>2021-11-26T15:25:13.000Z</published>
    <updated>2021-11-26T15:25:32.398Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Infinite-Scroll-實作"><a href="#Infinite-Scroll-實作" class="headerlink" title="Infinite Scroll 實作"></a>Infinite Scroll 實作</h1><h6 id="tags-實作-AJAX-javascript"><a href="#tags-實作-AJAX-javascript" class="headerlink" title="tags: 實作 AJAX javascript"></a>tags: <code>實作</code> <code>AJAX</code> <code>javascript</code></h6><p><a href="https://allenw0815.github.io/mission/mission_25/index.html">實作頁面連結</a></p><p><img src="https://i.imgur.com/9yNxdrU.png"></p><h3 id="Flowchart"><a href="#Flowchart" class="headerlink" title="Flowchart"></a>Flowchart</h3><ol><li>寫 HTML 結構，只需要輸入框及結果區即可</li><li>CSS 沒特別的</li><li>JS AJAX 拿資料後顯示，會用到 scroll 事件</li></ol><blockquote><p>JS 流程</p></blockquote><p>1.取好 DOM 拿資料，並用變數讓資料 api 可變，屬非同步動作需要 Promise 物件處理。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> limit = <span class="number">5</span> <span class="comment">// 資料數</span></span><br><span class="line"><span class="keyword">let</span> page = <span class="number">1</span> <span class="comment">// 頁數</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">getPosts</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> res = <span class="keyword">await</span> fetch(<span class="string">`https://jsonplaceholder.typicode.com/posts?_limit=<span class="subst">$&#123;limit&#125;</span>&amp;_page=<span class="subst">$&#123;page&#125;</span>`</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">await</span> res.json()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.產生內容，這邊用了兩種寫法，分別為無數字及有數字 1 的 function </p><ol><li>每一次都 call API 拿全部資料，依照筆數產生</li><li>每一次拿一定的筆數陸續產生<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// way01</span></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">showPosts</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">const</span> posts = <span class="keyword">await</span> getPosts()</span><br><span class="line">    <span class="keyword">let</span> display = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span> ; i &lt; posts.length ; i++ )&#123;</span><br><span class="line">        display +=<span class="string">`</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;post&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;div class=&quot;number&quot;&gt;<span class="subst">$&#123;posts[i].id&#125;</span>&lt;/div&gt;</span></span><br><span class="line"><span class="string">            &lt;div class=&quot;post-info&quot;&gt;</span></span><br><span class="line"><span class="string">                &lt;h2 class=&quot;title&quot;&gt;<span class="subst">$&#123;posts[i].title&#125;</span>&lt;/h2&gt;</span></span><br><span class="line"><span class="string">                &lt;p class=&quot;body&quot;&gt;<span class="subst">$&#123;posts[i].body&#125;</span>&lt;/p&gt;</span></span><br><span class="line"><span class="string">            &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;`</span></span><br><span class="line">    &#125;</span><br><span class="line">    resultContainer.innerHTML = display <span class="comment">// 跑全部</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">showLoader</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    loader.classList.add(<span class="string">&#x27;show&#x27;</span>)</span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        loader.classList.remove(<span class="string">&#x27;show&#x27;</span>)</span><br><span class="line">        <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">           limit += <span class="number">5</span> ; <span class="comment">//每次都多拿5筆重新 render</span></span><br><span class="line">           showPosts() </span><br><span class="line">        &#125;  , <span class="number">300</span>)    </span><br><span class="line">    &#125; , <span class="number">1200</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// way02</span></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">showPosts2</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">const</span> posts = <span class="keyword">await</span> getPosts()</span><br><span class="line"></span><br><span class="line">    posts.forEach( <span class="function"><span class="params">post</span> =&gt;</span>&#123;</span><br><span class="line">        <span class="keyword">const</span> postEl = <span class="built_in">document</span>.createElement(<span class="string">&#x27;div&#x27;</span>)</span><br><span class="line">        postEl.classList.add(<span class="string">&#x27;post&#x27;</span>)</span><br><span class="line">        postEl.innerHTML =<span class="string">`</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;number&quot;&gt;<span class="subst">$&#123;post.id&#125;</span>&lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;post-info&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;h2 class=&quot;title&quot;&gt;<span class="subst">$&#123;post.title&#125;</span>&lt;/h2&gt;</span></span><br><span class="line"><span class="string">            &lt;p class=&quot;body&quot;&gt;<span class="subst">$&#123;post.body&#125;</span>&lt;/p&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;`</span></span><br><span class="line">        resultContainer.appendChild(postEl) <span class="comment">// 陸續添加</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">showLoader2</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    loader.classList.add(<span class="string">&#x27;show&#x27;</span>)</span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        loader.classList.remove(<span class="string">&#x27;show&#x27;</span>)</span><br><span class="line">        <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">           page ++ ; <span class="comment">//每次拿後5筆往下 render</span></span><br><span class="line">           showPosts2() </span><br><span class="line">        &#125;  , <span class="number">200</span>)    </span><br><span class="line">    &#125; , <span class="number">500</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>捲動到底時觸發事件，添加 loading 動畫定時移除( 透過 CSS opacity )，並且在定時後更改 API 的 URL 再重新調用產生內容的 function ( 見上方步驟2 ) <a href="https://shubo.io/element-size-scrolling/">各種使用者尺寸</a><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.addEventListener(<span class="string">&#x27;scroll&#x27;</span>,<span class="function">()=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">const</span> &#123;scrollTop,scrollHeight,clientHeight&#125; = <span class="built_in">document</span>.documentElement</span><br><span class="line">    <span class="keyword">if</span>(scrollTop+clientHeight &gt;= scrollHeight - <span class="number">3</span>)&#123;showLoader2()&#125;</span><br><span class="line">    <span class="comment">// 超出卷軸的距離 + 當前視窗高度 &gt;= 整個完整高度</span></span><br><span class="line">    <span class="comment">// 當完全相等的時候代表卷軸尬底</span></span><br><span class="line">    <span class="comment">// -3 讓使用者幾乎到底時就可以觸發 不用完全到底 增加體驗</span></span><br></pre></td></tr></table></figure></li><li>搜尋功能，透過文字檢查是否包含後添加 CSS 隱藏實現，這邊都轉為小寫增加準確度<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">filter.addEventListener(<span class="string">&#x27;input&#x27;</span>,<span class="function">(<span class="params">e</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">const</span> compareTarget = e.target.value.toLowerCase()</span><br><span class="line">    <span class="keyword">const</span> posts = <span class="built_in">document</span>.querySelectorAll(<span class="string">&#x27;.post&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    posts.forEach(<span class="function"><span class="params">post</span>=&gt;</span>&#123;</span><br><span class="line">        <span class="keyword">const</span> title = post.querySelector(<span class="string">&#x27;.title&#x27;</span>).innerText.toLowerCase()</span><br><span class="line">        <span class="keyword">const</span> body = post.querySelector(<span class="string">&#x27;.body&#x27;</span>).innerText.toLowerCase()</span><br><span class="line"></span><br><span class="line">        title.includes(compareTarget) || body.includes(compareTarget)</span><br><span class="line">        ? post.style.display = <span class="string">&#x27;flex&#x27;</span> : post.style.display = <span class="string">&#x27;none&#x27;</span></span><br><span class="line">    &#125;)    </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li></ol><h3 id="紀錄"><a href="#紀錄" class="headerlink" title="紀錄"></a>紀錄</h3><ul><li>這邊的搜尋是比對標題及內文，然後透過 CSS 的display 來顯示結果<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">title.includes(compareTarget) ? post.style.display = <span class="string">&#x27;flex&#x27;</span> : post.style.display = <span class="string">&#x27;none&#x27;</span></span><br></pre></td></tr></table></figure></li><li>比對文字功能也可以用 indexOf() 回傳的索引值正負數( 若無回傳 -1 )判斷<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> array = [<span class="number">2</span>, <span class="number">9</span>, <span class="number">12</span>];</span><br><span class="line">array.indexOf(<span class="number">2</span>); <span class="comment">// 0</span></span><br><span class="line">array.indexOf(<span class="number">7</span>); <span class="comment">// -1</span></span><br></pre></td></tr></table></figure></li><li>這個 includes() 對於陣列跟字串都能用，一魚兩吃，讚<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;Blue Whale&#x27;</span>.includes(<span class="string">&#x27;blue&#x27;</span>) <span class="comment">// returns false</span></span><br><span class="line"></span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>].includes(<span class="number">2</span>); <span class="comment">// true</span></span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>].includes(<span class="number">4</span>); <span class="comment">// false</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="小記"><a href="#小記" class="headerlink" title="小記"></a>小記</h3><p>不會太難，但有在熟悉到一些非同步的練習<br>可以作一些補充</p><ul><li>做一鍵返回頁面最上層 (done)</li></ul><h3 id="參考"><a href="#參考" class="headerlink" title="參考"></a>參考</h3><p><a href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf">Array.prototype.indexOf()</a><br><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes">String.prototype.includes()</a><br><a href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array/includes">Array.prototype.includes()</a></p>]]></content>
    
    
    <summary type="html">Allen&#39;s side project</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>即時天氣APP</title>
    <link href="https://alnwangchi.github.io/2021/11/26/%E5%8D%B3%E6%99%82%E5%A4%A9%E6%B0%A3APP/"/>
    <id>https://alnwangchi.github.io/2021/11/26/%E5%8D%B3%E6%99%82%E5%A4%A9%E6%B0%A3APP/</id>
    <published>2021-11-26T15:24:01.000Z</published>
    <updated>2021-11-26T15:24:22.154Z</updated>
    
    <content type="html"><![CDATA[<h1 id="即時天氣APP-實作"><a href="#即時天氣APP-實作" class="headerlink" title="即時天氣APP 實作"></a>即時天氣APP 實作</h1><h6 id="tags-實作-AJAX"><a href="#tags-實作-AJAX" class="headerlink" title="tags: 實作 AJAX"></a>tags: <code>實作</code> <code>AJAX</code></h6><p><a href="https://allenw0815.github.io/mission/mission_32/index.html">實作頁面連結</a></p><p><img src="https://i.imgur.com/enrXXF8.png"></p><h3 id="Flowchart"><a href="#Flowchart" class="headerlink" title="Flowchart"></a>Flowchart</h3><ol><li>到氣象局網站取得授權 API</li><li>寫 HTML 結構，這邊只需要先做一個公版樣式</li><li>寫 CSS </li><li>AJAX 拿資料</li><li>依照結構去帶入相對資料後 render 到畫面中</li></ol><blockquote><p>JS 流程</p></blockquote><ol><li><p>取資料</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> latestData = <span class="literal">null</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> getDateAJAX = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    fetch(url)</span><br><span class="line">    .then(<span class="function">(<span class="params">res</span>)=&gt;</span>&#123;</span><br><span class="line">       <span class="keyword">return</span> res.json()</span><br><span class="line">    &#125;)</span><br><span class="line">    .then(<span class="function">(<span class="params">result</span>)=&gt;</span>&#123;</span><br><span class="line">        latestData = result.records.locations[<span class="number">0</span>].location        </span><br><span class="line">        <span class="keyword">let</span> cityIndex = <span class="number">0</span></span><br><span class="line">        setOption(cityIndex)<span class="comment">// 依照資料筆數設定 select 的項目</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>依照資料筆數設定 select 的項目</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> setOption = <span class="function">(<span class="params">cityIndex</span>) =&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> display = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span> ; i &lt; latestData.length ; i++)&#123;</span><br><span class="line">        display += </span><br><span class="line">        <span class="string">`</span></span><br><span class="line"><span class="string">        &lt;option value=&quot;<span class="subst">$&#123;i&#125;</span>&quot;&gt;<span class="subst">$&#123;latestData[i].locationName&#125;</span>&lt;/option&gt;</span></span><br><span class="line"><span class="string">        `</span>      </span><br><span class="line">    &#125;</span><br><span class="line">    select.innerHTML = display</span><br><span class="line">    changeCity(cityIndex)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>選不同的 option 時會指派給 cityIndex 不同的值進而改變畫面 ( 預設為 0 ) 在載入時會先執行一次 ， 所以顯示”雲林的資料”</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> changeCity = <span class="function">(<span class="params">cityIndex</span>) =&gt;</span>&#123;</span><br><span class="line">    cityIndex = select.value</span><br><span class="line">    showCards(latestData,cityIndex)</span><br><span class="line">    showMainCard(latestData,cityIndex)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>生成畫面，我分別用兩個 fuction 生成 (因為樣式不同)，這是其中一個依照資料生成畫面的 function ，把畫面需要的每一種資料都變成一個陣列 ex : [“多雲”, “多雲”, “多雲”, “晴時多雲”, “晴時多雲”, “多雲時晴”]，然後按照順序生畫面。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> showCards = <span class="function">(<span class="params">latestData,cityIndex</span>) =&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> unhandleData = latestData[cityIndex]</span><br><span class="line">    <span class="keyword">let</span> city = latestData[cityIndex].locationName</span><br><span class="line">    <span class="keyword">let</span> time = timeHandler(unhandleData)</span><br><span class="line">    <span class="keyword">let</span> temperature = temperatureHandler(unhandleData)</span><br><span class="line">    <span class="keyword">let</span> weather = weatherHandler(unhandleData)</span><br><span class="line">    <span class="keyword">let</span> weatherImg = setWeatherImgArray(weather)</span><br><span class="line">    <span class="keyword">let</span> bodyTemperature = bodyTemperatureHandler(unhandleData)</span><br><span class="line">    <span class="keyword">let</span> rainProbability = rainProbabilityHandler(unhandleData)</span><br><span class="line">    <span class="keyword">let</span> humidity = humidityHandler(unhandleData)</span><br><span class="line">    <span class="keyword">let</span> display = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span> ; i &lt; <span class="number">6</span> ; i++ )&#123;</span><br><span class="line">        display +=</span><br><span class="line">        <span class="string">`</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;card&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;h2&gt;<span class="subst">$&#123;city&#125;</span>&lt;/h2&gt;</span></span><br><span class="line"><span class="string">        &lt;h3&gt;<span class="subst">$&#123;time[i]&#125;</span>&lt;/h3&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;weather-temp&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;img src=<span class="subst">$&#123;weatherImg[i]&#125;</span> alt=&quot;&quot; /&gt;</span></span><br><span class="line"><span class="string">        &lt;h3&gt;<span class="subst">$&#123;temperature[i]&#125;</span>°C&lt;/h3&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;info&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;table&gt;</span></span><br><span class="line"><span class="string">            &lt;thead&gt;</span></span><br><span class="line"><span class="string">            &lt;tr&gt;</span></span><br><span class="line"><span class="string">                &lt;th colspan=&quot;2&quot;&gt;天氣資訊&lt;/th&gt;</span></span><br><span class="line"><span class="string">            &lt;/tr&gt;</span></span><br><span class="line"><span class="string">            &lt;/thead&gt;</span></span><br><span class="line"><span class="string">            &lt;tbody&gt;</span></span><br><span class="line"><span class="string">            &lt;tr&gt;</span></span><br><span class="line"><span class="string">                &lt;td&gt;天氣現象&lt;/td&gt;</span></span><br><span class="line"><span class="string">                &lt;td&gt;<span class="subst">$&#123;weather[i]&#125;</span>&lt;/td&gt;</span></span><br><span class="line"><span class="string">            &lt;/tr&gt;</span></span><br><span class="line"><span class="string">            &lt;tr&gt;</span></span><br><span class="line"><span class="string">                &lt;td&gt;體感溫度&lt;/td&gt;</span></span><br><span class="line"><span class="string">                &lt;td&gt;<span class="subst">$&#123;bodyTemperature[i]&#125;</span>°C&lt;/td&gt;</span></span><br><span class="line"><span class="string">            &lt;/tr&gt;</span></span><br><span class="line"><span class="string">            &lt;tr&gt;</span></span><br><span class="line"><span class="string">                &lt;td&gt;降雨機率&lt;/td&gt;</span></span><br><span class="line"><span class="string">                &lt;td&gt;<span class="subst">$&#123;rainProbability[i] === <span class="string">&#x27; &#x27;</span> ? <span class="string">&#x27;未測出&#x27;</span> : rainProbability[i]+<span class="string">&#x27;%&#x27;</span>&#125;</span>&lt;/td&gt;</span></span><br><span class="line"><span class="string">            &lt;/tr&gt;</span></span><br><span class="line"><span class="string">            &lt;tr&gt;</span></span><br><span class="line"><span class="string">                &lt;td&gt;相對溼度&lt;/td&gt;</span></span><br><span class="line"><span class="string">                &lt;td&gt;<span class="subst">$&#123;humidity[i]&#125;</span>%&lt;/td&gt;</span></span><br><span class="line"><span class="string">            &lt;/tr&gt;</span></span><br><span class="line"><span class="string">            &lt;/tbody&gt;</span></span><br><span class="line"><span class="string">        &lt;/table&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        `</span></span><br><span class="line">    &#125;   </span><br><span class="line">    cards.innerHTML = display</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="記錄"><a href="#記錄" class="headerlink" title="記錄"></a>記錄</h3></li></ol><blockquote><p>不論是天氣資訊、Google 地圖、Instagram 或 Facebook 等許多第三方的 API 服務，都不會讓你「匿名」使用，因此多數都會需要你先註冊後，才會發給你一組「金鑰（Key）」，之後所有對該服務所發送的請求都需要附帶上這組金鑰，這些服務的供應者就可以透過此把金鑰來辨認你使用他們服務的頻率和情況。</p></blockquote><blockquote><p>一開始 AJAX 拿到資料後我一直往下層的 fuction 傳進去使用，但是到了 selcet 的 change 觸發的時候也會呼叫 changeCity() 就會沒辦法拿到資料，所以後續的變數都變成 undefined</p><blockquote><ul><li> 應該取得資料後存在全域(或是拿的到的地方就行)</li></ul></blockquote></blockquote><blockquote><p>原本使用的資料一些用傳入參數一些用另存的 latestData 這樣資料流是亂的</p><blockquote><ul><li>統一使用另存的資料就好</li></ul></blockquote></blockquote><ul><li>大哥的解說<br><img src="https://i.imgur.com/Aw1kVJk.png"></li></ul><h3 id="小記"><a href="#小記" class="headerlink" title="小記"></a>小記</h3><p>之前課程很少時做 AJAX 串接的部分，相對的資料處理也很生疏，對我來說是個很好的練習。<br>大概寫了一天多兩天左右，應該都是會的東西，但是會因為一些大大小小的問題卡著，做的不順。<br>可以再補充的部分</p><ul><li>RWD<blockquote><p>在第一次 call AJAX 的時候可以記錄當下時間<br>當使用者切換縣市的時候判斷時間是否超過一定時間<br>是的話就要在次 call 一次 AJAX 更新資料</p></blockquote></li></ul><h3 id="參考"><a href="#參考" class="headerlink" title="參考"></a>參考</h3><p><a href="https://opendata.cwb.gov.tw/index">氣象資料開放平台</a><br><a href="https://opendata.cwb.gov.tw/opendatadoc/MFC/D0047.pdf">天氣因子中文對照表</a></p>]]></content>
    
    
    <summary type="html">Allen&#39;s side project</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>YouTube Search Engine</title>
    <link href="https://alnwangchi.github.io/2021/11/26/YouTube-Search-Engine/"/>
    <id>https://alnwangchi.github.io/2021/11/26/YouTube-Search-Engine/</id>
    <published>2021-11-26T15:22:08.000Z</published>
    <updated>2021-11-26T15:22:44.472Z</updated>
    
    <content type="html"><![CDATA[<h1 id="YouTube-Search-Engine-實作"><a href="#YouTube-Search-Engine-實作" class="headerlink" title="YouTube Search Engine 實作"></a>YouTube Search Engine 實作</h1><h6 id="tags-實作-AJAX-javascript"><a href="#tags-實作-AJAX-javascript" class="headerlink" title="tags: 實作 AJAX javascript"></a>tags: <code>實作</code> <code>AJAX</code> <code>javascript</code></h6><p><a href="https://allenw0815.github.io/mission/mission_33/index.html">實作頁面連結</a></p><p><img src="https://i.imgur.com/TQPMM18.png"></p><h3 id="Flowchart"><a href="#Flowchart" class="headerlink" title="Flowchart"></a>Flowchart</h3><ol><li>HTML CSS 不多</li><li>如何串接 YT 的 API 取得搜尋的相關資料</li><li>JS 讓資料在 input 點擊時顯示搜尋資料</li><li>判斷有無上下頁來生成按鈕</li></ol><h3 id="YouTube-API-取得"><a href="#YouTube-API-取得" class="headerlink" title="YouTube API 取得"></a>YouTube API 取得</h3><p>透過此平台( <a href="https://cloud.google.com/?hl=zh-tw">Google cloud club Platform</a> )取得服務，建立憑證取得金鑰以及啟用下圖的 API ，這邊理解金鑰為辨認請求端身分以及做限制 ( 每日配額或影片嵌入權限之類的 )，圖三為每個金鑰的配額度，而不同的請求會消耗掉不同額度的配額，參考( <a href="https://developers.google.com/youtube/v3/determine_quota_cost">YouTube Data API (v3) - Quota Calculator</a> )，也就是說我在頁面中搜尋個一百次達到配額上限後，之後的回應就會是 403 拒絕回復了。</p><p><img src="https://i.imgur.com/tsy1Ph3.png"></p><hr><p><img src="https://i.imgur.com/cqz39RF.png"></p><hr><p><img src="https://i.imgur.com/nHTQKjw.png"></p><blockquote><p>JS流程</p></blockquote><ol><li>call API 得到資料，帶有各參數來取得資料<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> key = <span class="string">&quot;AIzaSyC3Uae2cxrss-MgXU3XyoXXh6As_4ffE4Y&quot;</span></span><br><span class="line"><span class="keyword">let</span> key2 = <span class="string">&quot;AIzaSyAR5RPNsaVqHdtlYeNjtQQm12R8KSzsnHY&quot;</span> <span class="comment">// 啟用兩組因配額用完</span></span><br><span class="line"></span><br><span class="line">$(<span class="string">&#x27;.submit&#x27;</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> q = $(<span class="string">&#x27;input&#x27;</span>).val()</span><br><span class="line">    videoSearch(key2,q,<span class="number">5</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">videoSearch</span> (<span class="params">key, q, limit</span>) </span>&#123;</span><br><span class="line">    $.get(<span class="string">&#x27;https://www.googleapis.com/youtube/v3/search&#x27;</span>, </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">part</span>: <span class="string">&quot;snippet,id&quot;</span>,</span><br><span class="line">        <span class="attr">q</span>: q, <span class="comment">//搜尋內容</span></span><br><span class="line">        <span class="attr">type</span>: <span class="string">&quot;video&quot;</span>,</span><br><span class="line">        <span class="attr">key</span>: key, <span class="comment">// 金鑰</span></span><br><span class="line">        <span class="attr">maxResults</span>: limit,<span class="comment">//筆數</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">        <span class="comment">// 換頁用</span></span><br><span class="line">        <span class="keyword">let</span> nextPageToken = data.nextPageToken</span><br><span class="line">        <span class="keyword">let</span> prevPageToken = data.prevPageToken</span><br><span class="line"></span><br><span class="line">        data.items.forEach((item)=&#123;</span><br><span class="line">        <span class="comment">// display... 畫面內容生成</span></span><br><span class="line">        &#125;)</span><br><span class="line">        $(<span class="string">&#x27;.result ul&#x27;</span>).html(display) <span class="comment">// 生畫面</span></span><br><span class="line">        <span class="keyword">let</span> btns = createBtn(nextPageToken,prevPageToken,q) <span class="comment">//造按鈕</span></span><br><span class="line">        $(<span class="string">&#x27;.pages&#x27;</span>).html(btns) <span class="comment">//生按鈕</span></span><br><span class="line">        $(<span class="string">&#x27;#prev&#x27;</span>).on(<span class="string">&#x27;click&#x27;</span>,prevPage)           </span><br><span class="line">        $(<span class="string">&#x27;#next&#x27;</span>).on(<span class="string">&#x27;click&#x27;</span>,nextPage)           </span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>換頁面按鈕的部分，在資料中有換頁的 token 可使用，取得後傳入此 function 內紀錄在 data-key 屬性裡面，q 搜尋結果也傳進來 ( 這樣當 input.value 更換時沒有案搜尋都不會改變資料 )<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createBtn</span>(<span class="params">nextPageToken,prevPageToken,q</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> output = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="comment">// 讓第一頁只有下一頁的一個按鈕之判斷</span></span><br><span class="line">    <span class="keyword">if</span>(!prevPageToken)&#123;</span><br><span class="line">        output = <span class="string">`</span></span><br><span class="line"><span class="string">        &lt;button class=&quot;switch&quot; id=&quot;next&quot; data-token=<span class="subst">$&#123;nextPageToken&#125;</span> data-query=<span class="subst">$&#123;q&#125;</span> onclick=&quot;nextPage()&quot;&gt;</span></span><br><span class="line"><span class="string">          &lt;i class=&quot;fas fa-arrow-circle-right&quot;&gt;&lt;/i&gt;</span></span><br><span class="line"><span class="string">        &lt;/button&gt;</span></span><br><span class="line"><span class="string">        `</span></span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;    </span><br><span class="line">        output = <span class="string">`</span></span><br><span class="line"><span class="string">        &lt;button class=&quot;switch&quot; id=&quot;prev&quot; data-token=<span class="subst">$&#123;prevPageToken&#125;</span> data-query=<span class="subst">$&#123;q&#125;</span> onclick=&quot;prevPage()&quot;&gt;</span></span><br><span class="line"><span class="string">           &lt;i class=&quot;fas fa-arrow-circle-left&quot;&gt;&lt;/i&gt;</span></span><br><span class="line"><span class="string">        &lt;/button&gt;</span></span><br><span class="line"><span class="string">        &lt;button class=&quot;switch&quot; id=&quot;next&quot; data-token=<span class="subst">$&#123;nextPageToken&#125;</span> data-query=<span class="subst">$&#123;q&#125;</span> onclick=&quot;nextPage()&quot;&gt;</span></span><br><span class="line"><span class="string">          &lt;i class=&quot;fas fa-arrow-circle-right&quot;&gt;&lt;/i&gt;</span></span><br><span class="line"><span class="string">        &lt;/button&gt;</span></span><br><span class="line"><span class="string">        `</span></span><br><span class="line">    &#125;</span><br><span class="line">     <span class="keyword">return</span> output</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>這邊只差在多了一個帶入參數，上下頁取不同 token 即可<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">nextPage</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">let</span> token = $(<span class="string">&#x27;#next&#x27;</span>).data(<span class="string">&#x27;token&#x27;</span>)</span><br><span class="line">        <span class="keyword">let</span> q = $(<span class="string">&#x27;#next&#x27;</span>).data(<span class="string">&#x27;query&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        $.get(<span class="string">&#x27;https://www.googleapis.com/youtube/v3/search&#x27;</span>, </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">part</span>: <span class="string">&quot;snippet,id&quot;</span>,</span><br><span class="line">            <span class="attr">q</span>: q,</span><br><span class="line">            <span class="attr">type</span>: <span class="string">&quot;video&quot;</span>,</span><br><span class="line">            <span class="attr">key</span>: key,</span><br><span class="line">            <span class="attr">pageToken</span>: token, <span class="comment">//唯一差別在這邊多傳入了此參數</span></span><br><span class="line">            <span class="attr">maxResults</span>: limit,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">        <span class="comment">// 換頁用</span></span><br><span class="line">        <span class="keyword">let</span> nextPageToken = data.nextPageToken</span><br><span class="line">        <span class="keyword">let</span> prevPageToken = data.prevPageToken</span><br><span class="line"></span><br><span class="line">        data.items.forEach((item)=&#123;</span><br><span class="line">        <span class="comment">// display... 畫面內容生成</span></span><br><span class="line">        &#125;)</span><br><span class="line">        $(<span class="string">&#x27;.result ul&#x27;</span>).html(display) <span class="comment">// 再生下一頁畫面</span></span><br><span class="line">        <span class="keyword">let</span> btns = createBtn(nextPageToken,prevPageToken,q) <span class="comment">//造按鈕</span></span><br><span class="line">        $(<span class="string">&#x27;.pages&#x27;</span>).html(btns) <span class="comment">//生按鈕</span></span><br><span class="line">        $(<span class="string">&#x27;#prev&#x27;</span>).on(<span class="string">&#x27;click&#x27;</span>,prevPage)           </span><br><span class="line">        $(<span class="string">&#x27;#next&#x27;</span>).on(<span class="string">&#x27;click&#x27;</span>,nextPage)           </span><br><span class="line">    &#125;) </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="紀錄"><a href="#紀錄" class="headerlink" title="紀錄"></a>紀錄</h3><ul><li>要用JavaScript操縱網頁的DOM元素時，必須等網頁完全載入後才可安全地進行操作，而要確保網頁載入，可使用 JQ ( 一 ) &amp; JS ( 二 )</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$( <span class="built_in">document</span> ).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="comment">// 在這撰寫javascript程式碼</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="comment">// 在這撰寫javascript程式碼</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ul><li>最後這個光箱函式庫來播放影片，沒有多研究，引入後只套 class 而已。<br>[fresco.js](<a href="https://www.frescojs.com/">https://www.frescojs.com</a></li></ul><h3 id="小記"><a href="#小記" class="headerlink" title="小記"></a>小記</h3><p>整個專案只做到拿到資料、顯示畫面、換頁、光箱播放，除此之外有需多文件跟有的沒有的設定很複雜，上網查也有許多不同的做法，而且有許多小問題會出現，像是配額這部分原本不知道，出錯後找了半天才發現，有些影片回無法撥放有些卻可以，好像是影片的類型也有區別的樣子，好難啊幹!<br>等之後強一點再補充吧。</p>]]></content>
    
    
    <summary type="html">Allen&#39;s side project</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Drag and Drop</title>
    <link href="https://alnwangchi.github.io/2021/11/26/Drag-and-Drop/"/>
    <id>https://alnwangchi.github.io/2021/11/26/Drag-and-Drop/</id>
    <published>2021-11-26T15:13:08.000Z</published>
    <updated>2021-11-26T15:13:33.951Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Drag-amp-Drop-API-實作"><a href="#Drag-amp-Drop-API-實作" class="headerlink" title="Drag &amp; Drop API 實作"></a>Drag &amp; Drop API 實作</h1><h6 id="tags-實作-javascript"><a href="#tags-實作-javascript" class="headerlink" title="tags: 實作 javascript"></a>tags: <code>實作</code> <code>javascript</code></h6><p><a href="https://allenw0815.github.io/mission/mission_30/index.html">實作頁面連結</a></p><p><img src="https://i.imgur.com/HnLV0gl.png"></p><h3 id="Flowchart"><a href="#Flowchart" class="headerlink" title="Flowchart"></a>Flowchart</h3><ol><li>HTML、CSS 一頁即可呈現</li><li>了解 Drag &amp; Drop API</li><li>透過 JS 觸發拖曳事件</li><li>最後比對陣列完成實作</li></ol><blockquote><p>JS 流程</p></blockquote><p>1.設定原始資料，這邊先複製一份原始資料，然後產生畫面</p><ol><li>map 回傳陣列，將每一個數字回傳成為一個物件，帶有原本的值還有一個隨機數 ( 用來排序用 )</li><li>sort 將陣列透過剛剛的隨機數把陣列隨機打亂排列</li><li>forEach 針對每個傳入的物件依序去生成 HTML 結構，到這邊已實現每次進入的順序都不同</li><li>接著加掛事件監聽</li></ol><ul><li>展開運算子<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> number01 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"><span class="keyword">let</span> number02 = [...number01]</span><br><span class="line"><span class="built_in">console</span>.log(number02) <span class="comment">// [1, 2, 3]</span></span><br><span class="line">number01 == number02  <span class="comment">// false</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> number = [<span class="string">&#x27;08&#x27;</span>,<span class="string">&#x27;18&#x27;</span>,<span class="string">&#x27;27&#x27;</span>,<span class="string">&#x27;33&#x27;</span>,<span class="string">&#x27;47&#x27;</span>,<span class="string">&#x27;52&#x27;</span>,<span class="string">&#x27;66&#x27;</span>,<span class="string">&#x27;79&#x27;</span>,<span class="string">&#x27;87&#x27;</span>,<span class="string">&#x27;99&#x27;</span>]</span><br><span class="line"><span class="keyword">const</span> createList = <span class="function">() =&gt;</span>&#123;</span><br><span class="line">    [...number]</span><br><span class="line">    .map(<span class="function"><span class="params">num</span> =&gt;</span> ( &#123; <span class="attr">value</span> : num, <span class="attr">sort</span> : <span class="built_in">Math</span>.random()&#125; ))</span><br><span class="line">    .sort(<span class="function">(<span class="params">a, b</span>) =&gt;</span> a.sort - b.sort)</span><br><span class="line">    .forEach(<span class="function">(<span class="params">item,index</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> listItem = <span class="built_in">document</span>.createElement(<span class="string">&#x27;li&#x27;</span>)</span><br><span class="line">        listItem.setAttribute(<span class="string">&#x27;data-index&#x27;</span>, index) <span class="comment">//透過這個index判斷拉出哪個拉進哪個</span></span><br><span class="line">        listItem.innerHTML =</span><br><span class="line">        <span class="string">`</span></span><br><span class="line"><span class="string">        &lt;span class=&quot;number&quot;&gt; <span class="subst">$&#123;index+<span class="number">1</span>&#125;</span>.&lt;/span&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;draggable&quot; draggable=&quot;true&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;p&gt;Drag Number : <span class="subst">$&#123;item.value&#125;</span>&lt;/p&gt;</span></span><br><span class="line"><span class="string">        &lt;i class=&quot;fas fa-bars&quot;&gt;&lt;/i&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;        </span></span><br><span class="line"><span class="string">        `</span></span><br><span class="line">        listItems.push(listItem)</span><br><span class="line">        dragArea.appendChild(listItem)</span><br><span class="line">        &#125;);</span><br><span class="line">    addEventListeners()</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ul><p>2.接著一次將所需的節點加掛事件監聽，querySelectorAll 回傳的是 nodeList 需要用 forEach 方法來遍歷，最下方參考資料有所需要的事件說明。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> addEventListeners = <span class="function">() =&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">const</span> draggables = <span class="built_in">document</span>.querySelectorAll(<span class="string">&#x27;.draggable&#x27;</span>) <span class="comment">// 抓到右邊的&lt;div&gt;</span></span><br><span class="line">    <span class="keyword">const</span> listItems = <span class="built_in">document</span>.querySelectorAll(<span class="string">&#x27;.drag-area li&#x27;</span>) <span class="comment">// 抓到整個&lt;li&gt;</span></span><br><span class="line"></span><br><span class="line">    draggables.forEach(<span class="function"><span class="params">draggable</span> =&gt;</span>&#123;</span><br><span class="line">        draggable.addEventListener(<span class="string">&#x27;dragstart&#x27;</span>,dragStart) </span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    listItems.forEach(<span class="function"><span class="params">item</span> =&gt;</span>&#123;</span><br><span class="line">        item.addEventListener(<span class="string">&#x27;dragenter&#x27;</span>,dragEnter)</span><br><span class="line">        item.addEventListener(<span class="string">&#x27;dragleave&#x27;</span>,dragLeave)</span><br><span class="line">        item.addEventListener(<span class="string">&#x27;dragover&#x27;</span>,dragOver)</span><br><span class="line">        item.addEventListener(<span class="string">&#x27;drop&#x27;</span>,dragDrop)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>接著觸發各個事件的對應 function ( 這邊比較複雜 )，註解也有點饒舌，要慢慢看慢慢想。</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">dragStart</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 一拖曳的時候會觸發</span></span><br><span class="line">    dragStartIndex = <span class="built_in">this</span>.closest(<span class="string">&#x27;li&#x27;</span>).getAttribute(<span class="string">&#x27;data-index&#x27;</span>) <span class="comment">//賦值 知道拖曳的目標物   </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">dragEnter</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 進入範圍時會觸發</span></span><br><span class="line">    <span class="built_in">this</span>.classList.add(<span class="string">&#x27;over&#x27;</span>) <span class="comment">//將拉入的&lt;li&gt;添加樣式</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">dragLeave</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 離開範圍時會觸發</span></span><br><span class="line">    <span class="built_in">this</span>.classList.remove(<span class="string">&#x27;over&#x27;</span>) <span class="comment">//將拖離的&lt;li&gt;移除樣式</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">dragOver</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 到目標物上時持續被觸發</span></span><br><span class="line">    e.preventDefault(); <span class="comment">//見下方紀錄</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">dragDrop</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 拖曳區塊被放置一個有效區域時觸發</span></span><br><span class="line">    <span class="keyword">const</span> dragEndIndex =  <span class="built_in">this</span>.getAttribute(<span class="string">&#x27;data-index&#x27;</span>) <span class="comment">//定義要被交換的目標物</span></span><br><span class="line">    swapItems(dragStartIndex, dragEndIndex)   </span><br><span class="line">    <span class="built_in">this</span>.classList.remove(<span class="string">&#x27;over&#x27;</span>) <span class="comment">// 要移除樣式 不然沒有觸發 dragLeave 樣式會被保留</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> swapItems = <span class="function">(<span class="params">fromIndex, toIndex</span>) =&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> firstItem = listItems[fromIndex].querySelector(<span class="string">&#x27;.draggable&#x27;</span>) <span class="comment">//被拖的那個&lt;div&gt;</span></span><br><span class="line">    <span class="keyword">let</span> secondItem = listItems[toIndex].querySelector(<span class="string">&#x27;.draggable&#x27;</span>) <span class="comment">//要拉進的那個&lt;div&gt;</span></span><br><span class="line"></span><br><span class="line">    listItems[fromIndex].appendChild(secondItem) <span class="comment">//被拖的&lt;li&gt;放進要被拉進去的&lt;div&gt;</span></span><br><span class="line">    listItems[toIndex].appendChild(firstItem) <span class="comment">//被拉進去&lt;li&gt;要放被拖的&lt;div&gt;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>檢查數字大小順序，比對答案陣列與當前陣列的數字，並添加提示樣式</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkOrder</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">const</span> standerOrder = [] <span class="comment">//正確順序</span></span><br><span class="line">    <span class="keyword">let</span> ps = <span class="built_in">document</span>.querySelectorAll(<span class="string">&#x27;p&#x27;</span>) <span class="comment">//取得所有&lt;p&gt;</span></span><br><span class="line">    ps.forEach(<span class="function"><span class="params">p</span> =&gt;</span> &#123;</span><br><span class="line">        standerOrder.push((p.innerText).slice(-<span class="number">2</span>)) <span class="comment">//取得所有最後兩碼的文字 推入陣列中 </span></span><br><span class="line">    &#125;)</span><br><span class="line">    standerOrder.sort().reverse(); <span class="comment">//排序後反轉成由大到小</span></span><br><span class="line"></span><br><span class="line">    ps.forEach(<span class="function">(<span class="params">p,index</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">if</span>((p.innerText).slice(-<span class="number">2</span>) !== standerOrder[index])&#123;</span><br><span class="line">            p.classList.remove(<span class="string">&#x27;correct&#x27;</span>)</span><br><span class="line">            p.classList.add(<span class="string">&#x27;wrong&#x27;</span>)</span><br><span class="line">          &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">            p.classList.remove(<span class="string">&#x27;wrong&#x27;</span>)</span><br><span class="line">            p.classList.add(<span class="string">&#x27;correct&#x27;</span>)</span><br><span class="line">          &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="記錄"><a href="#記錄" class="headerlink" title="記錄"></a>記錄</h3><ul><li>觀察事件</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> dragStart = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;Event&#x27;</span>,<span class="string">&#x27;dragStart&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> dragOver = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;Event&#x27;</span>,<span class="string">&#x27;dragOver&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> drop = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;Event&#x27;</span>,<span class="string">&#x27;drop&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> dragEnter = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;Event&#x27;</span>,<span class="string">&#x27;dragEnter&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> dragLeave = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;Event&#x27;</span>,<span class="string">&#x27;dragLeave&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>按著移動時，觀察事件觸發的時機，再去指派要做什麼事情<blockquote><p><font color="#f00">這邊發現一個重要的問題</font></p><p>原本使用 arrow function 時候 this 的指向會變成 window 導致失效報錯，所以先改回一般寫法，再另外研究 this 問題。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">dragEnter</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;Event&#x27;</span>,<span class="string">&#x27;dragEnter&#x27;</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">this</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="https://i.imgur.com/Xnel7uh.png"></li></ul><hr><ul><li>抓取節點<blockquote><p>closest() 往上查找 只要找到符合條件的 就停止<br>find() 往下查找 只要找到符合條件的 就停止<br>parent() 只往上查找一層<br>parents() 往上查找 不停止 找出所有符合條件的</p></blockquote></li></ul><hr><ul><li><p>這邊發現 dragover 事件會影響 drop 事件 (同時觸發時 drop 會失效)，所以在 dragover 事件觸發 function 內取消預設執行的動作 (但不用 dropover 就無法實現功能)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">dragOver</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">    e.preventDefault();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>產生一個陣列長度為 10，並且內容為隨機數 ( 一行搞定 )</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> setData = <span class="function">() =&gt;</span> <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">10</span>).fill(<span class="number">0</span>).map(<span class="function">(<span class="params">e</span>)=&gt;</span> e += <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random()*<span class="number">100</span>))   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="小記"><a href="#小記" class="headerlink" title="小記"></a>小記</h3><p>這一實作比較難一點，因為比較多陌生的東西，有發現這種拖曳的功能有現成的函式庫可以使用，之後可以再作補充，讓移動可以更順暢，瀏覽起來不生硬。</p><h3 id="參考"><a href="#參考" class="headerlink" title="參考"></a>參考</h3><p><a href="https://developer.mozilla.org/zh-TW/docs/Web/API/HTML_Drag_and_Drop_API">MDN Drag &amp; Drop API</a><br><a href="https://www.youtube.com/watch?v=z54suepKiIU">YT 有示範lib使用</a><br><a href="https://osk2.medium.com/array-%E5%8F%AF%E8%83%BD%E8%B7%9F%E4%BD%A0%E6%83%B3%E7%9A%84%E4%B8%8D%E4%B8%80%E6%A8%A3-%E4%B8%8A-21f2031e4697">Array相關文章</a></p>]]></content>
    
    
    <summary type="html">Allen&#39;s side project</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Music Player</title>
    <link href="https://alnwangchi.github.io/2021/11/26/Music-Player/"/>
    <id>https://alnwangchi.github.io/2021/11/26/Music-Player/</id>
    <published>2021-11-26T15:00:41.000Z</published>
    <updated>2021-11-26T15:13:31.239Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Music-Player-實作"><a href="#Music-Player-實作" class="headerlink" title="Music Player 實作"></a>Music Player 實作</h1><h6 id="tags-實作-CSS-javascript"><a href="#tags-實作-CSS-javascript" class="headerlink" title="tags: 實作 CSS javascript"></a>tags: <code>實作</code> <code>CSS</code> <code>javascript</code></h6><p><a href="https://allenw0815.github.io/mission/mission_26/index.html">實作頁面連結</a></p><p><img src="https://i.imgur.com/FKmTHXY.png"></p><h3 id="Flowchart"><a href="#Flowchart" class="headerlink" title="Flowchart"></a>Flowchart</h3><ol><li>寫 HTML 結構</li><li>寫 CSS，這實作比較複雜，應會用到偽元素以及 animate</li><li>透過 JS 去讓 audio 播放以及暫停</li><li>播放以及暫停時分別需要做哪些事情?</li><li>讓進度條樣式對應到撥放的時間點上</li></ol><blockquote><p>JS 流程</p></blockquote><p>1.先把所需的 DOM 取好，用陣列存放歌曲名稱，畫面載入時依照陣列索引的名稱設定是哪首歌</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> songs = [<span class="string">&#x27;Lost_in_paradise&#x27;</span>,<span class="string">&#x27;Desperado&#x27;</span>,<span class="string">&#x27;Wild_side&#x27;</span>,<span class="string">&#x27;山雀&#x27;</span>,<span class="string">&#x27;Yuve_Yuve_Yu&#x27;</span>]</span><br><span class="line"><span class="keyword">let</span> songIndex = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">loadingSong</span> (<span class="params">song</span>) </span>&#123;</span><br><span class="line">    musicName.innerText = song.replaceAll(<span class="string">&#x27;_&#x27;</span>,<span class="string">&#x27; &#x27;</span>) <span class="comment">//顯示歌名 替換掉不要的符號</span></span><br><span class="line">    audio.src = <span class="string">`music/<span class="subst">$&#123;song&#125;</span>.mp3`</span> <span class="comment">//找對應音源</span></span><br><span class="line">    img.src = <span class="string">`img/<span class="subst">$&#123;song&#125;</span>.png`</span> <span class="comment">//找對應圖片</span></span><br><span class="line">&#125;</span><br><span class="line">loadingSong(songs[songIndex])</span><br></pre></td></tr></table></figure><p>2.點擊播放鍵時，判斷是否正在撥放分別去做暫停及播放兩個相反的 function</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> playingMode = <span class="function">() =&gt;</span>&#123;</span><br><span class="line">    audio.play() <span class="comment">// 音源播放</span></span><br><span class="line">    musicContainer.classList.add(<span class="string">&#x27;play&#x27;</span>) <span class="comment">// 替元素添加 class 來觸發 animate</span></span><br><span class="line">    playBtn.querySelector(<span class="string">&#x27;i&#x27;</span>).classList.remove(<span class="string">&#x27;fa-play&#x27;</span>) <span class="comment">// 移除當前圖示</span></span><br><span class="line">    playBtn.querySelector(<span class="string">&#x27;i&#x27;</span>).classList.add(<span class="string">&#x27;fa-pause&#x27;</span>) <span class="comment">// 更新圖示</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">musicPlay</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> isPlaying = musicContainer.classList.contains(<span class="string">&#x27;play&#x27;</span>) <span class="comment">// 回傳 Boolean</span></span><br><span class="line">    isPlaying ? pauseMode() : playingMode()</span><br><span class="line">&#125;</span><br><span class="line">playBtn.addEventListener(<span class="string">&#x27;click&#x27;</span>,musicPlay)</span><br></pre></td></tr></table></figure><p>3.前後鍵點擊</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">musicNext</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    songIndex &lt; songs.length -<span class="number">1</span>  ? songIndex++ : songIndex <span class="comment">// 限制在最後一首</span></span><br><span class="line">    loadingSong(songs[songIndex]) <span class="comment">// 更新歌曲</span></span><br><span class="line">    playingMode() <span class="comment">// 播放</span></span><br><span class="line">&#125;</span><br><span class="line">nextBtn.addEventListener(<span class="string">&#x27;click&#x27;</span>,musicNext)</span><br></pre></td></tr></table></figure><p>4.監聽歌曲長度以及當前歌曲時間搭配 CSS 實現進度條動畫及點擊跳轉</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">updateProgress</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 這邊為解構賦值</span></span><br><span class="line">    <span class="keyword">const</span> &#123;duration,currentTime&#125; = e.srcElement <span class="comment">// 取得總長跟播放到的長度</span></span><br><span class="line">    <span class="keyword">const</span> progressPercent = (currentTime / duration) * <span class="number">100</span> <span class="comment">// 取得百分比的數字</span></span><br><span class="line">    progress.style.width = <span class="string">`<span class="subst">$&#123;progressPercent&#125;</span>%`</span> <span class="comment">// 讓有顏色的進度條根據進度顯示</span></span><br><span class="line">&#125;</span><br><span class="line">audio.addEventListener(<span class="string">&#x27;timeupdate&#x27;</span>,updateProgress) <span class="comment">// 音源播放時持續觸發</span></span><br><span class="line"><span class="comment">// 正確說法是 currentTime 變更時觸發，感覺很耗能應該可以壓低頻率</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">setProgress</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> width = <span class="built_in">this</span>.clientWidth <span class="comment">// div的長度</span></span><br><span class="line">    <span class="keyword">const</span> x = e.offsetX <span class="comment">// 點擊位置的長度</span></span><br><span class="line">    <span class="keyword">const</span> duration =  audio.duration</span><br><span class="line">    audio.currentTime = ( x / width ) * duration</span><br><span class="line">    <span class="comment">// 代表點的位置是總長的幾分之幾再*總長就會得出相對應的當前播放時間然後更新currentTime</span></span><br><span class="line">&#125;</span><br><span class="line">progressArea.addEventListener(<span class="string">&#x27;click&#x27;</span>,setProgress)</span><br></pre></td></tr></table></figure><p>5.歌曲結束後換下一首，就好比結束後觸發點擊下一首按鍵一樣</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">audio.addEventListener(<span class="string">&#x27;ended&#x27;</span>,musicNext)</span><br></pre></td></tr></table></figure><h3 id="紀錄"><a href="#紀錄" class="headerlink" title="紀錄"></a>紀錄</h3><ul><li>currentTime 播放時不停變更</li></ul><p> <img src="https://i.imgur.com/syuAd08.png"></p><ul><li><p>動畫可以使用多個效果</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@keyframes</span> rotate &#123;</span><br><span class="line">    <span class="number">0%</span>&#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">0deg</span>) <span class="built_in">scale</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="number">50%</span>&#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">180deg</span>) <span class="built_in">scale</span>(<span class="number">1.1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="number">100%</span>&#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">360deg</span>) <span class="built_in">scale</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>透過兩個重疊但顏色不同的元素，配合 JS 來實現進度條效果</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.music-container</span> <span class="selector-class">.music-info</span> <span class="selector-class">.progress-area</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">80%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">10px</span>;   </span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">15px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">235</span>, <span class="number">233</span>, <span class="number">233</span>);</span><br><span class="line">    <span class="attribute">cursor</span>: pointer;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.music-container</span> <span class="selector-class">.music-info</span> <span class="selector-class">.progress-area</span> <span class="selector-class">.progress</span>&#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">145</span>, <span class="number">206</span>, <span class="number">245</span>);</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">10px</span>;  </span><br><span class="line">    <span class="attribute">width</span>: <span class="number">0%</span>;</span><br><span class="line">    <span class="attribute">transition</span>: <span class="number">0.1s</span> linear;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>透過添加 class 觸發 aninate 以及 進出場動畫</p></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.img-container</span> <span class="selector-tag">img</span>&#123;</span><br><span class="line">    <span class="attribute">animation-play-state</span>: paused;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*  在最外層元素加上 play 讓動畫開始 */</span></span><br><span class="line"><span class="selector-class">.music-container</span><span class="selector-class">.play</span> <span class="selector-class">.img-container</span> <span class="selector-tag">img</span>&#123;</span><br><span class="line">    <span class="attribute">animation-play-state</span>: running;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.music-info</span>&#123;</span><br><span class="line">    <span class="attribute">opacity</span>:<span class="number">0</span>;</span><br><span class="line">    <span class="attribute">transition</span>: .<span class="number">3s</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.music-container</span><span class="selector-class">.play</span> <span class="selector-class">.music-info</span>&#123;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">    <span class="attribute">transform</span>:<span class="built_in">translateY</span>(<span class="number">100%</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><font style="color:red">解構賦值</font>抓到對應的key</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> &#123;a,b,e&#125; = &#123;<span class="attr">a</span>: <span class="number">10</span>, <span class="attr">b</span>: <span class="number">20</span>, <span class="attr">c</span>: <span class="number">30</span>, <span class="attr">d</span>: <span class="number">40</span>, <span class="attr">e</span>:<span class="number">65</span>&#125;</span><br><span class="line">a; <span class="comment">// 10</span></span><br><span class="line">b; <span class="comment">// 10</span></span><br><span class="line">c; <span class="comment">// c is not defined</span></span><br><span class="line">d; <span class="comment">// d is not defined</span></span><br><span class="line">e; <span class="comment">// 10</span></span><br></pre></td></tr></table></figure><p><a href="https://wcc723.github.io/javascript/2017/12/25/javascript-destructuring/">ES6 解構賦值</a></p><h3 id="小記"><a href="#小記" class="headerlink" title="小記"></a>小記</h3><p>可以作一些補充</p><ul><li>頁面上添加所有的歌單，直接點擊切換歌曲</li><li>加上音量功能</li><li>添加每首歌的秒數以及倒數</li><li>將旋轉的圖片改為前後各一張的 carousel 也可以透過這邊切歌曲</li></ul><h3 id="參考"><a href="#參考" class="headerlink" title="參考"></a>參考</h3><p><a href="https://www.w3school.com.cn/tags/html_ref_audio_video_dom.asp">HTML&lt;audio&gt;<vedio>Property</a><br><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/HTMLMediaElement/timeupdate_event">timeupdate 事件</a></p>]]></content>
    
    
    <summary type="html">Allen&#39;s side project</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>跨年倒數計時</title>
    <link href="https://alnwangchi.github.io/2021/11/26/%E8%B7%A8%E5%B9%B4%E5%80%92%E6%95%B8%E8%A8%88%E6%99%82/"/>
    <id>https://alnwangchi.github.io/2021/11/26/%E8%B7%A8%E5%B9%B4%E5%80%92%E6%95%B8%E8%A8%88%E6%99%82/</id>
    <published>2021-11-25T16:38:51.000Z</published>
    <updated>2021-11-25T16:39:47.347Z</updated>
    
    <content type="html"><![CDATA[<h1 id="跨年倒數計時-實作"><a href="#跨年倒數計時-實作" class="headerlink" title="跨年倒數計時 實作"></a>跨年倒數計時 實作</h1><h6 id="tags-實作-時間"><a href="#tags-實作-時間" class="headerlink" title="tags: 實作 時間"></a>tags: <code>實作</code> <code>時間</code></h6><p><a href="https://allenw0815.github.io/mission/mission_29/index.html">實作頁面連結</a></p><p><img src="https://i.imgur.com/zYpIPir.jpg"></p><h3 id="Flowchart"><a href="#Flowchart" class="headerlink" title="Flowchart"></a>Flowchart</h3><ol><li>寫 HTML 結構，要有標題、顯示時間的位置(天、時、分、秒)</li><li>寫 CSS</li><li>透過 JS 的 date() 來實現倒數</li></ol><blockquote><p>JS流程</p></blockquote><ol><li>要抓到 2022.01.01.00:00 的微秒然後去減掉現在時間的微秒</li><li>換算成天、時、分、秒</li><li>需要用到 Math() 方法來處理數字</li><li>得到時間後顯示在頁面中，並且每一秒執行一次實現倒數</li></ol><h3 id="途中發現"><a href="#途中發現" class="headerlink" title="途中發現"></a>途中發現</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.ceil(<span class="number">271.37654</span>)); <span class="comment">//272</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.floor(<span class="number">271.37654</span>)); <span class="comment">//271</span></span><br></pre></td></tr></table></figure><ul><li>floor 地板代表取整數至最低 ceil 天花板代表取整數至最高</li></ul><p><img src="https://i.imgur.com/PQgXQHG.png"></p><ul><li>用了 % 來取餘數，本來忘記這個，要用未 floor 的數值減去已 floor 的來得到剩於時間，這樣程式碼會變成又臭又長 </li></ul><p><img src="https://i.imgur.com/sYkMQ09.png"></p><ul><li>先把 DOM 藏起來</li></ul><h3 id="小記"><a href="#小記" class="headerlink" title="小記"></a>小記</h3><p>不難，很快地就完成樣式以及功能，再去研究一下別人的寫法看看還有什麼可以補充。</p><h3 id="補充"><a href="#補充" class="headerlink" title="補充"></a>補充</h3><p>補充了 loading 動畫，一開始先把整個 DOM 給 hidden 起來(見途中發現)，然後在 loading 跑完之後再顯示出來，使用下方程式碼實現移除 class ，因為是非同步事件，所以用 Proimse 來確保是 setTimeout 結束之後才執行移除 class 的動作。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">el.classList.remove(<span class="string">&#x27;hidden&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/Ym7YZ1R.png"></p><h3 id="參考"><a href="#參考" class="headerlink" title="參考"></a>參考</h3><p><a href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Date">MDN Date</a><br><a href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Math">MDN Math</a></p>]]></content>
    
    
    <summary type="html">Allen&#39;s side project</summary>
    
    
    
    
    <category term="side project" scheme="https://alnwangchi.github.io/tags/side-project/"/>
    
  </entry>
  
  <entry>
    <title>This 指向</title>
    <link href="https://alnwangchi.github.io/2021/11/26/This%20%E6%8C%87%E5%90%91/"/>
    <id>https://alnwangchi.github.io/2021/11/26/This%20%E6%8C%87%E5%90%91/</id>
    <published>2021-11-25T16:37:10.000Z</published>
    <updated>2021-11-25T16:37:57.521Z</updated>
    
    <content type="html"><![CDATA[<h1 id="This-指向"><a href="#This-指向" class="headerlink" title="This 指向"></a>This 指向</h1><h6 id="tags-單元筆記-javascript-觀念"><a href="#tags-單元筆記-javascript-觀念" class="headerlink" title="tags: 單元筆記 javascript 觀念"></a>tags: <code>單元筆記</code> <code>javascript</code> <code>觀念</code></h6><h2 id="介紹"><a href="#介紹" class="headerlink" title="介紹"></a>介紹</h2><h2 id="範例"><a href="#範例" class="headerlink" title="範例"></a>範例</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">      <span class="comment">// this 代表函式的綁定物件，通常使用於函式內</span></span><br><span class="line">      <span class="comment">// 在不同的地方，綁定物件也就是 this 會不同</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">// 情況一 : 獨立的函式</span></span><br><span class="line">      <span class="function"><span class="keyword">function</span> <span class="title">t1</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&quot;t1 的 this : &quot;</span>, <span class="built_in">this</span>); <span class="comment">// 指向 window 物件</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&quot;視窗寬度 : &quot;</span>, <span class="built_in">this</span>.innerWidth); <span class="comment">// 視窗寬度</span></span><br><span class="line">      &#125;</span><br><span class="line">      t1();</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 情況二 : 物件的方法</span></span><br><span class="line">      <span class="keyword">let</span> obj = &#123;</span><br><span class="line">        <span class="attr">x</span>: <span class="number">10</span>,</span><br><span class="line">        <span class="attr">t2</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">          <span class="built_in">console</span>.log(<span class="string">&quot;t2 的 this : &quot;</span>, <span class="built_in">this</span>); <span class="comment">// 就是方法所屬的整個物件本人</span></span><br><span class="line">          <span class="built_in">console</span>.log(<span class="string">&quot;物件內的屬性 : &quot;</span>, <span class="built_in">this</span>.x); <span class="comment">// 印出物件屬性</span></span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;;</span><br><span class="line">      obj.t2();</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 情況三 : 事件處理的函式</span></span><br><span class="line">      <span class="built_in">document</span>.addEventListener(<span class="string">&quot;click&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&quot;事件的 this : &quot;</span>, <span class="built_in">this</span>); <span class="comment">// 指的就是觸發這個事件的對象物件 是誰做了事件監聽?就是誰</span></span><br><span class="line">        <span class="built_in">this</span>.body.append(<span class="string">&quot;Click !!!&quot;</span>); <span class="comment">// 做甚麼事?</span></span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 情況四 : 建構函式</span></span><br><span class="line">      <span class="function"><span class="keyword">function</span> <span class="title">t3</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&quot;t3 的 this : &quot;</span>, <span class="built_in">this</span>); <span class="comment">// 這邊瀏覽器就會幫我們建立一個空白物件</span></span><br><span class="line">        <span class="built_in">this</span>.x = <span class="number">1994</span>; <span class="comment">// 幫空物件添加屬性</span></span><br><span class="line">        <span class="built_in">this</span>.y = <span class="string">&quot;Allen&quot;</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">//   new t3();</span></span><br><span class="line">      <span class="keyword">let</span> r3 = <span class="keyword">new</span> t3();</span><br><span class="line">      <span class="built_in">console</span>.log(r3);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 進階 : 自訂綁定物件</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">let</span> obj2 = &#123;</span><br><span class="line">        <span class="attr">x</span>: <span class="number">1994</span>,</span><br><span class="line">        <span class="attr">y</span>: <span class="string">&quot;Amy&quot;</span>,</span><br><span class="line">      &#125;;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 重新綁定 bind</span></span><br><span class="line">      <span class="function"><span class="keyword">function</span> <span class="title">t4</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&quot;t4 的 this : &quot;</span>, <span class="built_in">this</span>); <span class="comment">// 指向 window 物件</span></span><br><span class="line">      &#125;</span><br><span class="line">      t4();</span><br><span class="line">      <span class="keyword">let</span> r4 = t4.bind(obj2);</span><br><span class="line">      r4();</span><br><span class="line">      <span class="keyword">let</span> r4_2 = t4.bind(<span class="built_in">document</span>);</span><br><span class="line">      r4_2();</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 用 apply 呼叫函式 自己設定綁定物件及用陣列傳入參數</span></span><br><span class="line">      <span class="function"><span class="keyword">function</span> <span class="title">t5</span>(<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&quot;結果 : &quot;</span>, a + b);</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&quot;t5 的 this : &quot;</span>, <span class="built_in">this</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      t5(<span class="number">8</span>, <span class="number">9</span>);</span><br><span class="line">      t5.apply(obj, [<span class="number">4</span>, <span class="number">7</span>]);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 用 call 呼叫函式 與apply相同只差在不用陣列傳入</span></span><br><span class="line">      t5.call(obj2, <span class="number">7</span>, <span class="number">23</span>);</span><br><span class="line">    &lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="說明"><a href="#說明" class="headerlink" title="說明"></a>說明</h2><h2 id="小記"><a href="#小記" class="headerlink" title="小記"></a>小記</h2><p>:::info</p><p>:::</p><h2 id="參考"><a href="#參考" class="headerlink" title="參考"></a>參考</h2><p><a href="xxx">xxx</a><br><a href="https://medium.com/schaoss-blog/%E4%B8%80%E6%AC%A1%E6%90%9E%E6%87%82%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%A9%A6%E6%9C%80%E6%84%9B%E5%95%8F%E7%9A%84-apply-bind-call-708f57518776">一次搞懂前端面試最愛問的 apply、bind、call</a></p>]]></content>
    
    
    <summary type="html">Allen&#39;s note</summary>
    
    
    
    
    <category term="觀念紀錄" scheme="https://alnwangchi.github.io/tags/%E8%A7%80%E5%BF%B5%E7%B4%80%E9%8C%84/"/>
    
  </entry>
  
  <entry>
    <title>正則表達式 Regular Expression</title>
    <link href="https://alnwangchi.github.io/2021/11/26/%E6%AD%A3%E5%89%87%E8%A1%A8%E9%81%94%E5%BC%8F-Regular-Expression/"/>
    <id>https://alnwangchi.github.io/2021/11/26/%E6%AD%A3%E5%89%87%E8%A1%A8%E9%81%94%E5%BC%8F-Regular-Expression/</id>
    <published>2021-11-25T16:09:58.000Z</published>
    <updated>2021-11-25T16:10:29.826Z</updated>
    
    <content type="html"><![CDATA[<h1 id="正則表達式-Regular-Expression"><a href="#正則表達式-Regular-Expression" class="headerlink" title="正則表達式 Regular Expression"></a>正則表達式 Regular Expression</h1><h6 id="tags-單元筆記"><a href="#tags-單元筆記" class="headerlink" title="tags: 單元筆記"></a>tags: <code>單元筆記</code></h6><h3 id="參考"><a href="#參考" class="headerlink" title="參考"></a>參考</h3><p><a href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Guide/Regular_Expressions">MDN文件說明</a><br><a href="https://regexone.com/">RegexOne練習網站</a></p><h3 id="主要用途"><a href="#主要用途" class="headerlink" title="主要用途"></a>主要用途</h3><p>過濾數字及文字的格式(電話號碼、身分證字號、Email)<br>也可以替代文字時使用</p><h3 id="測試"><a href="#測試" class="headerlink" title="測試"></a>測試</h3><p>將比對條件放在//之間</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> str = <span class="string">&quot;Allen Wang&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> result01 = str.match(<span class="regexp">/Wang/</span>);</span><br><span class="line"><span class="built_in">console</span>.log(result01.length); <span class="comment">//1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> result02 = <span class="regexp">/Wang/</span>.test(str);</span><br><span class="line"><span class="keyword">let</span> result03 = <span class="regexp">/wang/</span>.test(str);</span><br><span class="line"><span class="built_in">console</span>.log(result02); <span class="comment">//True</span></span><br><span class="line"><span class="built_in">console</span>.log(result03); <span class="comment">//False</span></span><br></pre></td></tr></table></figure><h3 id="符號記一下"><a href="#符號記一下" class="headerlink" title="符號記一下"></a>符號記一下</h3><table><thead><tr><th>字元</th><th>解說</th></tr></thead><tbody><tr><td>*</td><td>0個或是多個</td></tr><tr><td>+</td><td>1個或是多個</td></tr><tr><td>?</td><td>0個或是1個</td></tr><tr><td>\d</td><td>任何的數字</td></tr><tr><td>\D</td><td>任何的非數字</td></tr><tr><td>\</td><td>跳脫字元</td></tr><tr><td>[]</td><td>只能是([a-z][A-Z][0-9])</td></tr><tr><td>[^]</td><td>不能是</td></tr><tr><td>\w</td><td>任何字母數字</td></tr><tr><td>\W</td><td>任何非字母數字(應該就是指符號 )</td></tr><tr><td>{}</td><td>幾個字元</td></tr><tr><td>{,}</td><td>幾到幾個字元</td></tr><tr><td>\s</td><td>任何空白</td></tr><tr><td>\S</td><td>任何非空白</td></tr><tr><td>^…$</td><td>開頭跟結尾</td></tr><tr><td>()</td><td>capture group</td></tr><tr><td>(a|b)</td><td>match a or b</td></tr></tbody></table><h3 id="小結"><a href="#小結" class="headerlink" title="小結"></a>小結</h3><p>透過上方連結練習稍微理解過常用符號的用法<br>可用於表單驗證<br>有許多現成解答可直接google到</p>]]></content>
    
    
    <summary type="html">Allen&#39;s note</summary>
    
    
    
    
    <category term="正則" scheme="https://alnwangchi.github.io/tags/%E6%AD%A3%E5%89%87/"/>
    
  </entry>
  
  <entry>
    <title>Scope 作用域</title>
    <link href="https://alnwangchi.github.io/2021/11/25/Scope%20%E4%BD%9C%E7%94%A8%E5%9F%9F/"/>
    <id>https://alnwangchi.github.io/2021/11/25/Scope%20%E4%BD%9C%E7%94%A8%E5%9F%9F/</id>
    <published>2021-11-25T15:24:44.000Z</published>
    <updated>2021-11-25T15:25:49.535Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Scope-作用域"><a href="#Scope-作用域" class="headerlink" title="Scope 作用域"></a>Scope 作用域</h1><h6 id="tags-單元筆記-javascript-觀念"><a href="#tags-單元筆記-javascript-觀念" class="headerlink" title="tags: 單元筆記 javascript 觀念"></a>tags: <code>單元筆記</code> <code>javascript</code> <code>觀念</code></h6><h2 id="介紹"><a href="#介紹" class="headerlink" title="介紹"></a>介紹</h2><p>區分成 Global 、 Function 、 Block 三種，指的是變數或常數的宣告與語句的可被存取得到的範圍。</p><ul><li>Global : 內層所有地方都可以存取這邊的內容，即全域變數</li><li>Function : var 宣告會被限制在內，不影響外層變數</li><li>Block : 就是以大括號 ( {} ) 劃分出作用的範圍，用 let 宣告會被限制在內，不影響外層變數</li></ul><p>大概就像這個樣子的大小範圍</p><p><img src="https://i.imgur.com/1QhgAgW.png"></p><h2 id="範例"><a href="#範例" class="headerlink" title="範例"></a>範例</h2><p>這邊說明 var 與 let 宣告的作用域，ex01 中 x 並未被限制在大括弧內，他還是可以被存取到，即是在Global Scope 中 ;<br>而 ex02 有將變數限制在大括弧內，也就是 Block Scope中 ;<br>然而 ex03 中 x 就有被限制在這個 funtion 內，也就是 Function Scope 中。</p><ul><li>ex01<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> x = <span class="number">5</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(x) <span class="comment">// 5</span></span><br></pre></td></tr></table></figure></li><li>ex02<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> y = <span class="number">5</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(y) <span class="comment">// y is not defined</span></span><br></pre></td></tr></table></figure></li><li>ex03<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">allen</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> x = <span class="number">5</span></span><br><span class="line">&#125;</span><br><span class="line">allen()</span><br><span class="line"><span class="built_in">console</span>.log(x) <span class="comment">// x is not defined</span></span><br></pre></td></tr></table></figure></li></ul><p>這邊說明 x 被限制在 Function Scope 中，若裡面找不到變數時則會向外找。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> x = <span class="string">&#x27;全域 x&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> x = <span class="string">&#x27;區域 x&#x27;</span></span><br><span class="line">  <span class="built_in">console</span>.log(x) </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(x) <span class="comment">// 全域 x</span></span><br><span class="line">fn() <span class="comment">// 區域 x</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> x = <span class="string">&#x27;全域 x&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(x) </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(x) <span class="comment">// 全域 x</span></span><br><span class="line">fn() <span class="comment">// 全域 x</span></span><br></pre></td></tr></table></figure><ul><li>ex04<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//函式陳述式</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sum</span>(<span class="params">a, b</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">return</span> a+b</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//函式表達式</span></span><br><span class="line"><span class="keyword">const</span> sum = <span class="function"><span class="keyword">function</span>(<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> a+b</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//箭頭函式</span></span><br><span class="line"><span class="keyword">const</span> sum = <span class="function">(<span class="params">a, b</span>) =&gt;</span> a+b</span><br></pre></td></tr></table></figure><h2 id="小記"><a href="#小記" class="headerlink" title="小記"></a>小記</h2></li></ul><p>:::info<br>應避免使用 var，改用 let 和 const<br>const 具備所有 let 的特性，差別在於不能更改值，在明確不會更動資料時使用。<br>而 function 可以用 ex04 中的的第一及第三種，差別在於第一種會被提升，也就是可以在定義之前調用;<br>而第二種幾乎可以用第三種取代，第三種又有綁定 this 的好處。<br>:::</p><h2 id="參考"><a href="#參考" class="headerlink" title="參考"></a>參考</h2><p><a href="https://something-about-js-book.onejar99.com/day08">ES6 更嚴謹安全的 let 和 const</a><br><a href="https://eyesofkids.gitbooks.io/javascript-start-from-es6/content/part3/function_scope.html">函式與作用域</a><br><a href="https://kuro.tw/posts/2015/07/08/note-javascript-variables-declared-with-the-scope-scope/">JavaScript 變數宣告與作用域</a></p>]]></content>
    
    
    <summary type="html">Allen&#39;s note</summary>
    
    
    
    
    <category term="觀念紀錄" scheme="https://alnwangchi.github.io/tags/%E8%A7%80%E5%BF%B5%E7%B4%80%E9%8C%84/"/>
    
  </entry>
  
  <entry>
    <title>Hoisting 提升</title>
    <link href="https://alnwangchi.github.io/2021/11/23/Hoisting%20%E6%8F%90%E5%8D%87/"/>
    <id>https://alnwangchi.github.io/2021/11/23/Hoisting%20%E6%8F%90%E5%8D%87/</id>
    <published>2021-11-22T16:56:04.000Z</published>
    <updated>2021-11-22T17:19:24.664Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Hoisting-提升"><a href="#Hoisting-提升" class="headerlink" title="Hoisting 提升"></a>Hoisting 提升</h1><h6 id="tags-單元筆記-javascript-觀念"><a href="#tags-單元筆記-javascript-觀念" class="headerlink" title="tags: 單元筆記 javascript 觀念"></a>tags: <code>單元筆記</code> <code>javascript</code> <code>觀念</code></h6><h2 id="介紹"><a href="#介紹" class="headerlink" title="介紹"></a>介紹</h2><p>hoisting 看起來是單純地將變數和函式宣告，移動到程式的區塊頂端。<br>但實際上是變數和函數的宣告時就會先建立一個記憶體空間，運行程式碼時再賦值。<br>函式提升的優先級大於變數。<br>let 與 const 也有 hoisting。<br>但他們不會初始化為 undefined，而且在賦值之前試圖取值會發生錯誤（TDZ error）。</p><h2 id="範例"><a href="#範例" class="headerlink" title="範例"></a>範例</h2><p>ex01就好比是02</p><ul><li>ex01<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(a); <span class="comment">// undefined</span></span><br><span class="line"><span class="keyword">var</span> a = <span class="string">&#x27;50&#x27;</span>;</span><br></pre></td></tr></table></figure></li><li>ex02<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a</span><br><span class="line"><span class="built_in">console</span>.log(a); <span class="comment">// undefined</span></span><br><span class="line">a = <span class="string">&#x27;50&#x27;</span>;</span><br></pre></td></tr></table></figure></li></ul><hr><p>function expression 也會 hoisting</p><ul><li>這種函式建立方法稱為：function expression 函式表達式<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(callSomeone); <span class="comment">// undefined</span></span><br><span class="line">callSomeone(<span class="string">&#x27;Allen&#x27;</span>); <span class="comment">// callSomeone is not a function</span></span><br><span class="line"><span class="keyword">var</span> callSomeone = <span class="function"><span class="keyword">function</span> (<span class="params">name</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&#x27;打給 &#x27;</span> + name)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>這種函式建立方法稱為：function declaration 函式陳述式 ( 直接以 function 開頭 )<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(callSomeone) <span class="comment">// function</span></span><br><span class="line">callSomeone(<span class="string">&#x27;Allen&#x27;</span>); <span class="comment">// 打給 Allen</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">callSomeone</span>(<span class="params">name</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&#x27;打給 &#x27;</span> + name)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="說明"><a href="#說明" class="headerlink" title="說明"></a>說明</h2><h4 id="為何需要"><a href="#為何需要" class="headerlink" title="為何需要?"></a>為何需要?</h4><p>讓 function 之間相互調用可行</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">loop</span>(<span class="params">n</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (n&gt;<span class="number">1</span>) &#123;</span><br><span class="line">    logEvenOrOdd(--n)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">logEvenOrOdd</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(n, n % <span class="number">2</span> ? <span class="string">&#x27;Odd&#x27;</span> : <span class="string">&#x27;Even&#x27;</span>)</span><br><span class="line">  loop(n)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">loop(<span class="number">10</span>)</span><br></pre></td></tr></table></figure><h4 id="如果沒有-Hoisting-會怎樣"><a href="#如果沒有-Hoisting-會怎樣" class="headerlink" title="如果沒有 Hoisting 會怎樣 ?"></a>如果沒有 Hoisting 會怎樣 ?</h4><ol><li>一定要宣告變數才能使用</li><li>一定要宣告 function 才能使用</li><li>function 之間沒辦法互相調用</li></ol><h2 id="小記"><a href="#小記" class="headerlink" title="小記"></a>小記</h2><p>應該就是一個基本觀念，當中會有一些底層細節，”目前”來說只要我有好好的宣告變數，基本上就不會有太大的影響。</p><p>:::info<br>好習慣 : 使用前先宣告<br>:::</p><h2 id="參考"><a href="#參考" class="headerlink" title="參考"></a>參考</h2><p><a href="https://developer.mozilla.org/zh-TW/docs/Glossary/Hoisting">MDN</a><br><a href="https://blog.techbridge.cc/2018/11/10/javascript-hoisting/">我知道你懂 hoisting，可是你了解到多深？</a><br><a href="https://wcc723.github.io/javascript/2017/12/16/javascript-hoisting/">鐵人賽：JavaScript Function 與 Hoisting</a></p>]]></content>
    
    
    <summary type="html">Allen&#39;s note</summary>
    
    
    
    
    <category term="觀念紀錄" scheme="https://alnwangchi.github.io/tags/%E8%A7%80%E5%BF%B5%E7%B4%80%E9%8C%84/"/>
    
  </entry>
  
  <entry>
    <title>my first article</title>
    <link href="https://alnwangchi.github.io/2021/11/21/my-first-article/"/>
    <id>https://alnwangchi.github.io/2021/11/21/my-first-article/</id>
    <published>2021-11-21T07:28:29.000Z</published>
    <updated>2021-11-25T17:08:57.785Z</updated>
    
    <content type="html"><![CDATA[<h1 id="紀錄-HEXO-相關內容"><a href="#紀錄-HEXO-相關內容" class="headerlink" title="紀錄 HEXO 相關內容"></a>紀錄 HEXO 相關內容</h1><h2 id="不能忘記的-Hexo-指令"><a href="#不能忘記的-Hexo-指令" class="headerlink" title="不能忘記的 Hexo 指令"></a>不能忘記的 Hexo 指令</h2><p>hexo new ‘文章名稱’<br>hexo generate 產生發布內容<br>hexo server 啟動預覽 hexo s 簡寫<br>hexo clean<br>hexo deploy</p><h2 id="安裝的套件"><a href="#安裝的套件" class="headerlink" title="安裝的套件"></a>安裝的套件</h2><p>npm install hexo-generator-feed –save 讓右上方的搜尋能作用</p>]]></content>
    
    
    <summary type="html">Allen</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://alnwangchi.github.io/2021/11/21/hello-world/"/>
    <id>https://alnwangchi.github.io/2021/11/21/hello-world/</id>
    <published>2021-11-21T07:17:55.012Z</published>
    <updated>2021-11-25T17:09:09.505Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    <summary type="html">Allen</summary>
    
    
    
    
  </entry>
  
</feed>
